{"version":3,"sources":["reducers/eventReducer.js","reducers/navbarReducer.js","reducers/timeReducer.js","reducers/eventTypesReducer.js","reducers/eventTypesListItemReducer.js","reducers/index.js","actions/types.js","store.js","components/layout/Navbar.js","actions/navbarActions.js","components/Calendar/AddEventModal.js","actions/eventActions.js","components/Calendar/EditEventModal.js","components/Calendar/index.js","actions/eventTypesListItemActions.js","components/TimeGrids/DayList/TimeSlot/index.js","actions/timeActions.js","components/TimeGrids/DayList/TimeSlotMatrics.js","components/TimeGrids/DayList/index.js","components/TimeGrids/EventTypesList/EventTypesListItem/index.js","components/TimeGrids/EventTypesList/index.js","components/TimeGrids/index.js","components/EventTypes/AddBtn.js","components/EventTypes/AddEventTypeModal.js","actions/eventTypesActions.js","components/EventTypes/EditEventTypeModal.js","components/EventTypes/EventTypeItem/index.js","components/EventTypes/index.js","App.js","index.js"],"names":["initialState","events","_id","start","moment","startOf","add","toDate","end","title","color","event","editing","date","viewingDate","final","eventTypes","eventType","currentEventTypesListItem","erasing","combineReducers","state","action","type","payload","map","filter","console","log","error","navbar","time","item","eventTypesListItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","connect","setDate","selectedDate","min","subtract","max","useState","format","day","setDay","useEffect","M","AutoInit","className","id","style","position","zIndex","allowPast","dateFormat","name","handleChange","value","wrapperStyle","display","margin","width","inputStyle","background","borderRadius","paddingLeft","startDate","endDate","href","data-target","to","modalStyle","height","maxHeight","overflow","addEvent","hour","dispatch","a","uuid","content","defaultColors","Math","floor","random","length","err","response","setTitle","setHour","refStart","useRef","refEnd","options","defaultDate","Date","setDefaultDate","elem","document","getElementsByName","Datepicker","init","onChange","e","target","htmlFor","ref","onClick","toast","html","newEvent","current","updateEvent","deleteEvent","focus","els","getElementsByClassName","Array","prototype","forEach","call","el","localizer","momentLocalizer","DnDCalendar","withDragAndDrop","Calendar","resizeEvent","updatedEvent","setCurrentEvent","currentEvent","setEditing","editEventModalRef","addEventModalRef","defaultView","onEventDrop","onEventResize","onSelectSlot","click","onSelectEvent","toolbar","onNavigate","resizable","selectable","popup","components","month","dateHeader","label","setCurrentEventTypesListItem","property","setErasing","setTimeRange","index","setHover","isSelected","backgroundColor","onMouseUp","TimeSlotMatrics","year","timeslots","m","d","y","times","TimeslotItems","i","push","key","j","timeslot","setViewingDate","days","TimeSlot","listRef","parentRef","setHeight","setWidth","loaded","setLoaded","updateSize","offsetHeight","offsetWidth","window","addEventListener","scrollToDate","getDateOffset","diff","offsetTop","scrollToItem","itemCount","itemSize","children","onScroll","scrollTop","offset","temp","round","scrollOffset","EventTypesListItem","onEventTypesListItemClick","hover","border","padding","letterSpacing","transition","onMouseEnter","onMouseLeave","isBetween","deepCopy","arr","copy","isArray","DayBlocks","props","arguments","daysInMonth","prevTime","prevProps","prevState","this","selectRange","setState","paintRange","eraseRange","date1","date2","newDays","startIndex","endIndex","isTrue","Component","AddBtn","addEventType","setColor","onChangeComplete","hex","colors","isUnique","updateEventType","deleteEventType","currenEventType","newEventType","setCurrentEventType","class","App","path","render","exact","TimeGrids","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.59baa7d6.chunk.js","sourcesContent":["import {\r\n  ADD_EVENT,\r\n  ADD_EVENT_ERROR,\r\n  DELETE_EVENT,\r\n  DELETE_EVENT_ERROR,\r\n  UPDATE_EVENT,\r\n  UPDATE_EVENT_ERROR,\r\n  RESIZE_EVENT,\r\n  RESIZE_ERROR,\r\n  SET_CURRENT_EVENT,\r\n  SET_EDITING,\r\n} from \"../actions/types\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst initialState = {\r\n  // Later get these from database\r\n  events: [\r\n    {\r\n      _id: 1,\r\n      start: moment().startOf(\"day\").add(2, \"days\").toDate(),\r\n      end: moment().startOf(\"day\").add(4, \"days\").toDate(),\r\n      title: \"Project Prototyping\",\r\n      color: \"#99E6E6\",\r\n    },\r\n    {\r\n      _id: 2,\r\n      start: moment().startOf(\"day\").toDate(),\r\n      end: moment().startOf(\"day\").add(1, \"days\").toDate(),\r\n      title: \"Interview\",\r\n      color: \"#4DB380\",\r\n    },\r\n    {\r\n      _id: 3,\r\n      start: moment().startOf(\"day\").add(7, \"days\").toDate(),\r\n      end: moment().startOf(\"day\").add(14, \"days\").toDate(),\r\n      title: \"Frontend Design\",\r\n      color: \"#99E6E6\",\r\n    },\r\n    {\r\n      _id: 4,\r\n      start: moment().startOf(\"day\").add(4, \"days\").toDate(),\r\n      end: moment().startOf(\"day\").add(6, \"days\").toDate(),\r\n      title: \"UI/UX Design\",\r\n      color: \"#99E6E6\",\r\n    },\r\n  ],\r\n\r\n  // selected event\r\n  event: {},\r\n  editing: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_EVENT:\r\n      return {\r\n        ...state,\r\n        events: [...state.events, { ...action.payload }],\r\n        event: {},\r\n        editing: false,\r\n      };\r\n    case UPDATE_EVENT:\r\n      return {\r\n        ...state,\r\n        events: state.events.map((event) =>\r\n          event._id === action.payload._id ? action.payload : event\r\n        ),\r\n        event: {},\r\n        editing: false,\r\n      };\r\n    case DELETE_EVENT:\r\n      return {\r\n        ...state,\r\n        events: state.events.filter((events) => events._id !== action.payload),\r\n        event: {},\r\n        editing: false,\r\n      };\r\n    case SET_CURRENT_EVENT:\r\n      return {\r\n        ...state,\r\n        event: action.payload,\r\n      };\r\n    case RESIZE_EVENT:\r\n      return {\r\n        ...state,\r\n        events: state.events.map((event) =>\r\n          event._id === action.payload._id ? action.payload : event\r\n        ),\r\n      };\r\n    case (RESIZE_ERROR,\r\n    ADD_EVENT_ERROR,\r\n    UPDATE_EVENT_ERROR,\r\n    DELETE_EVENT_ERROR):\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case SET_EDITING:\r\n      return {\r\n        ...state,\r\n        editing: !state.editing,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_DATE, SET_VIEWING_DATE } from \"../actions/types\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst initialState = {\r\n  date: moment(),\r\n  viewingDate: moment().startOf(\"day\"),\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_DATE:\r\n      return {\r\n        ...state,\r\n        date: action.payload,\r\n      };\r\n    case SET_VIEWING_DATE:\r\n      return {\r\n        ...state,\r\n        viewingDate: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_TIME, SET_HOVER, SET_TIME_RANGE } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  start: null,\r\n  end: null,\r\n  final: true,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_TIME_RANGE:\r\n      if (state.final == true) {\r\n        return {\r\n          ...state,\r\n          start: action.payload,\r\n          // Reset end\r\n          end: null,\r\n          final: false,\r\n        };\r\n      } else if (state.start != null) {\r\n        return {\r\n          ...state,\r\n          end: action.payload,\r\n          final: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          start: action.payload,\r\n          // Reset end\r\n          end: null,\r\n          final: false,\r\n        };\r\n      }\r\n    case SET_HOVER:\r\n      if (state.final == false && state.start != null) {\r\n        return {\r\n          ...state,\r\n          end: action.payload,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_EVENT_TYPE,\r\n  ADD_EVENT_TYPE_ERROR,\r\n  SET_CURRENT_EVENT_TYPE,\r\n  UPDATE_EVENT_TYPE,\r\n  UPDATE_EVENT_TYPE_ERROR,\r\n  DELETE_EVENT_TYPE,\r\n  DELETE_EVENT_TYPE_ERROR,\r\n} from \"../actions/types\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst initialState = {\r\n  // Later get these from database\r\n  eventTypes: [\r\n    {\r\n      _id: \"1\",\r\n      title: \"Gym\",\r\n      color: \"#33991a\",\r\n    },\r\n    {\r\n      _id: \"2\",\r\n      title: \"Guitar\",\r\n      color: \"#00FFFF\",\r\n    },\r\n    {\r\n      _id: \"3\",\r\n      title: \"Reading\",\r\n      color: \"#4D80CC\",\r\n    },\r\n  ],\r\n\r\n  // selected event\r\n  eventType: {},\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_EVENT_TYPE:\r\n      return {\r\n        ...state,\r\n        eventTypes: [...state.eventTypes, { ...action.payload }],\r\n        event: {},\r\n      };\r\n    case UPDATE_EVENT_TYPE:\r\n      return {\r\n        ...state,\r\n        eventTypes: state.eventTypes.map((item) =>\r\n          item._id === action.payload._id ? action.payload : item\r\n        ),\r\n        eventType: {},\r\n      };\r\n    case DELETE_EVENT_TYPE:\r\n      return {\r\n        ...state,\r\n        eventTypes: state.eventTypes.filter(\r\n          (item) => item._id !== action.payload\r\n        ),\r\n        eventType: {},\r\n      };\r\n    case (ADD_EVENT_TYPE_ERROR,\r\n    UPDATE_EVENT_TYPE_ERROR,\r\n    DELETE_EVENT_TYPE_ERROR):\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case SET_CURRENT_EVENT_TYPE:\r\n      return {\r\n        ...state,\r\n        eventType: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SET_CURRENT_EVENT_TYPE_LIST_ITEM,\r\n  SET_ERASING,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  currentEventTypesListItem: null,\r\n  erasing: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_EVENT_TYPE_LIST_ITEM:\r\n      return {\r\n        ...state,\r\n        currentEventTypesListItem: action.payload,\r\n      };\r\n    case SET_ERASING:\r\n      return {\r\n        ...state,\r\n        erasing: !state.erasing,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport eventReducer from \"./eventReducer\";\r\nimport navbarReducer from \"./navbarReducer\";\r\nimport timeReducer from \"./timeReducer\";\r\nimport eventTypesReducer from \"./eventTypesReducer\";\r\nimport eventTypesListItemReducer from \"./eventTypesListItemReducer\";\r\n\r\nexport default combineReducers({\r\n  event: eventReducer,\r\n  navbar: navbarReducer,\r\n  time: timeReducer,\r\n  eventTypes: eventTypesReducer,\r\n  eventTypesListItem: eventTypesListItemReducer,\r\n});\r\n","// eventActions\r\nexport const ADD_EVENT = \"ADD_EVENT\";\r\nexport const ADD_EVENT_ERROR = \"ADD_EVENT_ERROR\";\r\nexport const DELETE_EVENT = \"DELETE_EVENT\";\r\nexport const DELETE_EVENT_ERROR = \"DELETE_EVENT_ERROR\";\r\nexport const UPDATE_EVENT = \"UPDATE_EVENT\";\r\nexport const UPDATE_EVENT_ERROR = \"UPDATE_EVENT_ERROR\";\r\nexport const RESIZE_EVENT = \"RESIZE_EVENT\";\r\nexport const RESIZE_ERROR = \"RESIZE_ERROR\";\r\nexport const SET_CURRENT_EVENT = \"SET_CURRENT_EVENT\";\r\nexport const SET_EDITING = \"SET_EDITING\";\r\n\r\n// navbarActions\r\nexport const SET_DATE = \"SET_DATE\";\r\nexport const SET_VIEWING_DATE = \"SET_VIEWING_DATE\";\r\n\r\n// timeActions\r\nexport const SET_TIME_RANGE = \"SET_TIME_RANGE\";\r\nexport const SET_HOVER = \"SET_HOVER\";\r\n\r\n// eventTypesActions\r\nexport const ADD_EVENT_TYPE = \"ADD_EVENT_TYPE\";\r\nexport const ADD_EVENT_TYPE_ERROR = \"ADD_EVENT_TYPE_ERROR\";\r\nexport const DELETE_EVENT_TYPE = \"DELETE_EVENT_TYPE\";\r\nexport const DELETE_EVENT_TYPE_ERROR = \"DELETE_EVENT_TYPE_ERROR\";\r\nexport const UPDATE_EVENT_TYPE = \"UPDATE_EVENT_TYPE\";\r\nexport const UPDATE_EVENT_TYPE_ERROR = \"UPDATE_EVENT_TYPE_ERROR\";\r\nexport const SET_CURRENT_EVENT_TYPE = \"SET_CURRENT_EVENT_TYPE\";\r\n\r\n// eventTypesListActions\r\nexport const SET_CURRENT_EVENT_TYPE_LIST_ITEM =\r\n  \"SET_CURRENT_EVENT_TYPE_LIST_ITEM\";\r\nexport const SET_ERASING = \"SET_ERASING\";\r\n","import { createStore, applyMiddleware } from \"redux\";\r\n// In order to use Redux extension\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n// Where all reducers are organized\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\n// Add all middleware into this array\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setDate } from \"../../actions/navbarActions\";\r\n\r\nimport moment from \"moment\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\nimport \"react-datez/dist/css/react-datez.css\";\r\nimport { ReactDatez } from \"react-datez\";\r\n\r\nimport \"./style.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Navbar = ({ navbar: { date: selectedDate }, setDate }) => {\r\n  // For now hardcoded the date range, congruen to DayList/index.js\r\n  var min = moment().startOf(\"year\").subtract(1, \"year\");\r\n  var max = moment().startOf(\"year\").add(1, \"year\");\r\n\r\n  const [day, setDay] = useState(moment().format());\r\n\r\n  useEffect(() => {\r\n    M.AutoInit();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setDay(selectedDate);\r\n  }, [selectedDate]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <nav\r\n        className=\"\"\r\n        id=\"navbar\"\r\n        style={{ position: \"relative\", zIndex: \"100\" }}\r\n      >\r\n        <div className=\"nav-wrapper\">\r\n          <ReactDatez\r\n            allowPast\r\n            dateFormat=\"MMM DD, YYYY\"\r\n            name=\"dateInput\"\r\n            handleChange={(date) => {\r\n              if (date !== \"\") {\r\n                // Local useState\r\n                setDay(date);\r\n                // Set date for redux\r\n                setDate(date);\r\n              }\r\n            }}\r\n            value={day}\r\n            wrapperStyle={{\r\n              display: \"inline-block\",\r\n              margin: \" 0.15rem 1rem 0rem 1rem\",\r\n              width: \"11rem\",\r\n            }}\r\n            inputStyle={{\r\n              background: \"white\",\r\n              borderRadius: \"1rem\",\r\n              paddingLeft: \"1rem\",\r\n            }}\r\n            startDate={min.format(\"MMM DD, YYYY\")}\r\n            endDate={max.format(\"MMM DD, YYYY\")}\r\n          />\r\n          <a href=\"#\" data-target=\"mobile-demo\" className=\"sidenav-trigger\">\r\n            <i className=\"material-icons\">menu</i>\r\n          </a>\r\n          <ul className=\"right hide-on-med-and-down\">\r\n            <li>\r\n              <Link to=\"/calendar\">Monthly Calendar</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/day\">Day Block</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/event-types\">Event Types</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n\r\n      <ul className=\"sidenav\" id=\"mobile-demo\">\r\n        <li>\r\n          <Link to=\"/calendar\">Monthly Calendar</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/day\">Day Block</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/event-types\">Event Types</Link>\r\n        </li>\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    navbar: state.navbar,\r\n  };\r\n};\r\n\r\nNavbar.propTypes = {};\r\n\r\nexport default connect(mapStateToProps, { setDate })(Navbar);\r\n","import { SET_DATE, SET_VIEWING_DATE } from \"./types\";\r\n\r\nexport const setDate = (date) => {\r\n  return {\r\n    type: SET_DATE,\r\n    payload: date,\r\n  };\r\n};\r\n\r\nexport const setViewingDate = (date) => {\r\n  return {\r\n    type: SET_VIEWING_DATE,\r\n    payload: date,\r\n  };\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n// import TechSelectOptions from \"../techs/TechSelectOptions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addEvent } from \"../../actions/eventActions\";\r\n\r\nimport \"materialize-css/dist/css/materialize.min.css\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst AddEventModal = ({\r\n  event: {\r\n    event: { start, end },\r\n  },\r\n  addEvent,\r\n}) => {\r\n  // _id, title, start, end, estimate hours (optional)\r\n  const [title, setTitle] = useState(\"\");\r\n  const [hour, setHour] = useState(\"\");\r\n  const refStart = useRef(\"\");\r\n  const refEnd = useRef(\"\");\r\n\r\n  useEffect(() => {\r\n    var options = {\r\n      defaultDate: new Date(moment(start).format(\"MMM DD, YYYY\")),\r\n      setDefaultDate: true,\r\n    };\r\n    var elem = document.getElementsByName(\"startDate\")[0];\r\n    var instance = M.Datepicker.init(elem, options);\r\n    // instance.open();\r\n    instance.setDate(new Date(moment(start).format(\"MMM DD, YYYY\")));\r\n  }, [start]);\r\n\r\n  useEffect(() => {\r\n    var options = {\r\n      defaultDate: new Date(moment(end).format(\"MMM DD, YYYY\")),\r\n      setDefaultDate: true,\r\n    };\r\n    var elem = document.getElementsByName(\"endDate\")[0];\r\n    var instance = M.Datepicker.init(elem, options);\r\n    // instance.open();\r\n    instance.setDate(new Date(moment(end).format(\"MMM DD, YYYY\")));\r\n  }, [end]);\r\n\r\n  const onSubmit = () => {\r\n    if (title === \"\") {\r\n      M.toast({ html: \"Please enter a title\" });\r\n    } else {\r\n      // Check if startDate is before endDate\r\n\r\n      const newEvent = {\r\n        title,\r\n        start: moment(refStart.current.value, \"MMM DD, YYYY\").toDate(),\r\n        // Calendar always select the start of the day, add one to makeup for the end date\r\n        end: moment(refEnd.current.value, \"MMM DD, YYYY\")\r\n          .add(1, \"days\")\r\n          .toDate(),\r\n        hour: hour ? hour : null,\r\n      };\r\n      addEvent(newEvent);\r\n\r\n      M.toast({ html: `Event added` });\r\n\r\n      // Clear Fields\r\n      setTitle(\"\");\r\n      setHour(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"add-event-modal\" className=\"modal\" style={modalStyle}>\r\n      <div className=\"modal-content\">\r\n        <h4>Enter A New Event</h4>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <label htmlFor=\"title\" className=\"active\">\r\n              Event Title\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"number\"\r\n              name=\"hour\"\r\n              value={hour}\r\n              onChange={(e) => setHour(e.target.value)}\r\n            />\r\n            <label htmlFor=\"hour\" className=\"active\">\r\n              Estimate Hours to Complete (Optional)\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              ref={refStart}\r\n              type=\"text\"\r\n              name=\"startDate\"\r\n              // value={startDate}\r\n              // onChange={(e) => setStartDate(e.target.value)}\r\n              className=\"datepicker\"\r\n            />\r\n            <label htmlFor=\"startDate\" className=\"active\">\r\n              Start Date\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              ref={refEnd}\r\n              type=\"text\"\r\n              name=\"endDate\"\r\n              // value={endDate}\r\n              // onChange={(e) => setEndDate(e.target.value)}\r\n              className=\"datepicker\"\r\n            />\r\n            <label htmlFor=\"endDate\" className=\"active\">\r\n              End Date\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onSubmit}\r\n          className=\"modal-close waves-effect waves btn\"\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: \"75%\",\r\n  height: \"75%\",\r\n  maxHeight: \"100%\",\r\n  overflow: \"visible\",\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    event: state.event,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addEvent })(AddEventModal);\r\n","import {\r\n  ADD_EVENT,\r\n  ADD_EVENT_ERROR,\r\n  DELETE_EVENT,\r\n  DELETE_EVENT_ERROR,\r\n  UPDATE_EVENT,\r\n  UPDATE_EVENT_ERROR,\r\n  RESIZE_EVENT,\r\n  RESIZE_ERROR,\r\n  SET_CURRENT_EVENT,\r\n  SET_EDITING,\r\n} from \"./types\";\r\n\r\nimport { v4 as uuid } from \"uuid\"; //Dev use only\r\n\r\n// Add new event\r\nexport const addEvent = ({ title, hour, start, end }) => async (dispatch) => {\r\n  try {\r\n    // Implement REST API Here\r\n\r\n    // const res = await fetch(\"./logs\");\r\n    // const data = await res.json();\r\n\r\n    // uuid as placeholder\r\n    const id = uuid();\r\n\r\n    // Random Color\r\n    const defaultColors = [\r\n      \"#FF6633\",\r\n      \"#FFB399\",\r\n      \"#FF33FF\",\r\n      \"#FFFF99\",\r\n      \"#00B3E6\",\r\n      \"#E6B333\",\r\n      \"#3366E6\",\r\n      \"#999966\",\r\n      \"#99FF99\",\r\n      \"#B34D4D\",\r\n      \"#80B300\",\r\n      \"#809900\",\r\n      \"#E6B3B3\",\r\n      \"#6680B3\",\r\n      \"#66991A\",\r\n      \"#FF99E6\",\r\n      \"#CCFF1A\",\r\n      \"#FF1A66\",\r\n      \"#E6331A\",\r\n      \"#33FFCC\",\r\n      \"#66994D\",\r\n      \"#B366CC\",\r\n      \"#4D8000\",\r\n      \"#B33300\",\r\n      \"#CC80CC\",\r\n      \"#66664D\",\r\n      \"#991AFF\",\r\n      \"#E666FF\",\r\n      \"#4DB3FF\",\r\n      \"#1AB399\",\r\n      \"#E666B3\",\r\n      \"#33991A\",\r\n      \"#CC9999\",\r\n      \"#B3B31A\",\r\n      \"#00E680\",\r\n      \"#4D8066\",\r\n      \"#809980\",\r\n      \"#E6FF80\",\r\n      \"#1AFF33\",\r\n      \"#999933\",\r\n      \"#FF3380\",\r\n      \"#CCCC00\",\r\n      \"#66E64D\",\r\n      \"#4D80CC\",\r\n      \"#9900B3\",\r\n      \"#E64D66\",\r\n      \"#4DB380\",\r\n      \"#FF4D4D\",\r\n      \"#99E6E6\",\r\n      \"#6666FF\",\r\n    ];\r\n\r\n    const content = {\r\n      title,\r\n      hour,\r\n      start,\r\n      end,\r\n      _id: id,\r\n      color: defaultColors[Math.floor(Math.random() * defaultColors.length)],\r\n    };\r\n    console.log(content);\r\n    dispatch({\r\n      type: ADD_EVENT,\r\n      payload: content,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ADD_EVENT_ERROR,\r\n      payload: err.response,\r\n    });\r\n  }\r\n};\r\n\r\n// Update existing event\r\nexport const updateEvent = ({ _id, title, hour, start, end, color }) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    // Implement REST API Here\r\n\r\n    // const res = await fetch(\"./logs\");\r\n    // const data = await res.json();\r\n\r\n    // uuid as placeholder\r\n    const content = { title, hour, start, end, _id, color };\r\n    console.log(content);\r\n    dispatch({\r\n      type: UPDATE_EVENT,\r\n      payload: content,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: UPDATE_EVENT_ERROR,\r\n      payload: err.response,\r\n    });\r\n  }\r\n};\r\n\r\n// Delete existing event\r\nexport const deleteEvent = (_id) => async (dispatch) => {\r\n  try {\r\n    // Implement REST API Here\r\n\r\n    // const res = await fetch(\"./logs\");\r\n    // const data = await res.json();\r\n\r\n    dispatch({\r\n      type: DELETE_EVENT,\r\n      payload: _id,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: DELETE_EVENT_ERROR,\r\n      payload: err.response,\r\n    });\r\n  }\r\n};\r\n\r\n// Resize the selected event\r\nexport const resizeEvent = ({ event, start, end }) => async (dispatch) => {\r\n  try {\r\n    var updatedEvent = event;\r\n    event.start = start;\r\n    event.end = end;\r\n\r\n    // Implement REST API Here\r\n\r\n    // const res = await fetch(\"./logs\");\r\n    // const data = await res.json();\r\n\r\n    dispatch({\r\n      type: RESIZE_EVENT,\r\n      payload: updatedEvent,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: RESIZE_ERROR,\r\n      payload: err.response,\r\n    });\r\n  }\r\n};\r\n\r\n// Set event duration on monthly calendar for newly added event\r\nexport const setCurrentEvent = (currentEvent) => {\r\n  return {\r\n    type: SET_CURRENT_EVENT,\r\n    payload: currentEvent,\r\n  };\r\n};\r\n\r\nexport const setEditing = () => {\r\n  return {\r\n    type: SET_EDITING,\r\n  };\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n// import TechSelectOptions from \"../techs/TechSelectOptions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { updateEvent, deleteEvent } from \"../../actions/eventActions\";\r\n\r\nimport \"materialize-css/dist/css/materialize.min.css\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst EditEventModal = ({\r\n  event: { event, editing },\r\n  updateEvent,\r\n  deleteEvent,\r\n}) => {\r\n  // _id, title, start, end, estimate hours (optional)\r\n  const [title, setTitle] = useState(\"\");\r\n  const [hour, setHour] = useState(\"\");\r\n  const refStart = useRef(\"\");\r\n  const refEnd = useRef(\"\");\r\n\r\n  // ComponentDidMount\r\n  useEffect(() => {\r\n    if (editing === true) {\r\n      const { start, end } = event;\r\n\r\n      document.getElementsByName(\"title\")[1].focus();\r\n      setTitle(event.title);\r\n      // Preload hour input-field only if it exists\r\n      if (event.hour) {\r\n        document.getElementsByName(\"hour\")[1].focus();\r\n        setHour(event.hour);\r\n      }\r\n\r\n      var options = {\r\n        defaultDate: new Date(moment(start).format(\"MMM DD, YYYY\")),\r\n        setDefaultDate: true,\r\n      };\r\n      var elem = document.getElementsByName(\"startDate\")[1];\r\n      var instance = M.Datepicker.init(elem, options);\r\n      // instance.open();\r\n      instance.setDate(new Date(moment(start).format(\"MMM DD, YYYY\")));\r\n\r\n      var els = document.getElementsByClassName(\"input-field\");\r\n      Array.prototype.forEach.call(els, function (el) {\r\n        // Do stuff here\r\n        el.focus();\r\n      });\r\n\r\n      var options = {\r\n        defaultDate: new Date(moment(end).format(\"MMM DD, YYYY\")),\r\n        setDefaultDate: true,\r\n      };\r\n      // First on the list is AddEvenModal, then its EditEventModal\r\n      var elem = document.getElementsByName(\"endDate\")[1];\r\n      var instance = M.Datepicker.init(elem, options);\r\n      // instance.open();\r\n      instance.setDate(new Date(moment(end).format(\"MMM DD, YYYY\")));\r\n    }\r\n  }, [editing]);\r\n\r\n  const onDelete = () => {\r\n    deleteEvent(event._id);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (title === \"\") {\r\n      M.toast({ html: \"Please enter a title\" });\r\n    } else {\r\n      // Check if startDate is before endDate\r\n\r\n      const newEvent = {\r\n        _id: event._id,\r\n        color: event.color,\r\n        title,\r\n        start: moment(refStart.current.value, \"MMM DD, YYYY\").toDate(),\r\n        end: moment(refEnd.current.value, \"MMM DD, YYYY\").toDate(),\r\n        hour: hour ? hour : null,\r\n      };\r\n      updateEvent(newEvent);\r\n\r\n      M.toast({ html: `Event Updated` });\r\n\r\n      // Clear Fields\r\n      setTitle(\"\");\r\n      setHour(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"edit-event-modal\" className=\"modal\" style={modalStyle}>\r\n      <div className=\"modal-content\">\r\n        <h4>Edit Event</h4>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <label htmlFor=\"title\" className=\"active\">\r\n              Event Title\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"number\"\r\n              name=\"hour\"\r\n              value={hour}\r\n              onChange={(e) => setHour(e.target.value)}\r\n            />\r\n            <label htmlFor=\"hour\" className=\"active\">\r\n              Estimate Hours to Complete (Optional)\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              ref={refStart}\r\n              type=\"text\"\r\n              name=\"startDate\"\r\n              // value={startDate}\r\n              // onChange={(e) => setStartDate(e.target.value)}\r\n              className=\"datepicker\"\r\n            />\r\n            <label htmlFor=\"startDate\" className=\"active\">\r\n              Start Date\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              ref={refEnd}\r\n              type=\"text\"\r\n              name=\"endDate\"\r\n              // value={endDate}\r\n              // onChange={(e) => setEndDate(e.target.value)}\r\n              className=\"datepicker\"\r\n            />\r\n            <label htmlFor=\"endDate\" className=\"active\">\r\n              End Date\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onDelete}\r\n          className=\"modal-close waves-effect waves-green btn-flat\"\r\n        >\r\n          Delete\r\n        </a>\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onSubmit}\r\n          className=\"modal-close waves-effect waves btn\"\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: \"75%\",\r\n  height: \"75%\",\r\n  maxHeight: \"100%\",\r\n  overflow: \"visible\",\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    event: state.event,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { updateEvent, deleteEvent })(\r\n  EditEventModal\r\n);\r\n","import React, { useEffect, useRef, useState, Fragment } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport {\r\n  resizeEvent,\r\n  setCurrentEvent,\r\n  setEditing,\r\n} from \"../../actions/eventActions\";\r\n\r\nimport AddEventModal from \"./AddEventModal\";\r\nimport EditEventModal from \"./EditEventModal\";\r\n\r\nimport moment from \"moment\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\r\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport M from \"materialize-css\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\nconst DnDCalendar = withDragAndDrop(Calendar);\r\n\r\nconst CalendarView = ({\r\n  event: { events, editing },\r\n  navbar: { date },\r\n  resizeEvent,\r\n  setCurrentEvent,\r\n  setEditing,\r\n}) => {\r\n  var editEventModalRef = useRef();\r\n  var addEventModalRef = useRef();\r\n\r\n  useEffect(() => {\r\n    M.AutoInit();\r\n  }, []);\r\n\r\n  // Resize event\r\n  const onEventResize = ({ event, start, end }) => {\r\n    resizeEvent({ event, start, end });\r\n  };\r\n\r\n  // Move event\r\n  const onEventDrop = ({ event, start, end }) => {\r\n    resizeEvent({ event, start, end });\r\n  };\r\n\r\n  // New Event\r\n  const newEvent = (event) => {\r\n    setCurrentEvent(event);\r\n\r\n    addEventModalRef.current.click();\r\n  };\r\n\r\n  // Update selected event\r\n  const updateEvent = (event) => {\r\n    setCurrentEvent(event);\r\n\r\n    editEventModalRef.current.click();\r\n    setEditing();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"App\">\r\n        <DnDCalendar\r\n          defaultDate={moment().toDate()}\r\n          defaultView=\"month\"\r\n          // views={[\"month\", \"agenda\"]}\r\n          events={events}\r\n          localizer={localizer}\r\n          onEventDrop={onEventDrop}\r\n          onEventResize={onEventResize}\r\n          onSelectSlot={newEvent}\r\n          onSelectEvent={updateEvent}\r\n          toolbar={false}\r\n          // components={{ toolbar: CustomToolbar }}\r\n          date={moment(date).toDate()}\r\n          // No use, just to dismiss the alert, date selection is handled by datepicker\r\n          onNavigate={() => {}}\r\n          resizable\r\n          selectable\r\n          style={{ height: \"94vh\" }}\r\n          // messages={{\r\n          //   showMore: (target) => (\r\n          //     <div\r\n          //       style={{ cursor: \"pointer\" }}\r\n          //       onClick={(e, events) => {\r\n          //         console.log(events);\r\n          //         e.stopPropagation();\r\n          //         e.preventDefault();\r\n          //       }}\r\n          //       className=\"tooltipped\"\r\n          //       data-position=\"bottom\"\r\n          //       data-tooltip={events[0].title}\r\n          //     >\r\n          //       {`+ ${target} more`}\r\n          //     </div>\r\n          //   ),\r\n          // }}\r\n          popup\r\n          // Disbale redirec when cliking date pn calendar\r\n          components={{\r\n            month: {\r\n              dateHeader: ({ date, label }) => {\r\n                return <div>{label}</div>;\r\n              },\r\n            },\r\n          }}\r\n          //         onSelectSlot={this.newEvent}\r\n          //         onDragStart={console.log}\r\n          //         popup={true}\r\n          //         dragFromOutsideItem={\r\n          //           this.state.displayDragItemInCell ? this.dragFromOutsideItem : null\r\n          //         }\r\n          //         onDropFromOutside={this.onDropFromOutside}\r\n          //         handleDragStart={this.handleDragStart}\r\n        />\r\n        <a\r\n          ref={editEventModalRef}\r\n          id=\"editEventModalTrigger\"\r\n          href=\"#edit-event-modal\"\r\n          className=\"modal-trigger\"\r\n        ></a>\r\n        <a\r\n          ref={addEventModalRef}\r\n          id=\"addEventModalTrigger\"\r\n          href=\"#add-event-modal\"\r\n          className=\"modal-trigger\"\r\n        ></a>\r\n      </div>\r\n      <AddEventModal />\r\n      <EditEventModal />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    event: state.event,\r\n    navbar: state.navbar,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  resizeEvent,\r\n  setCurrentEvent,\r\n  setEditing,\r\n})(CalendarView);\r\n","import { SET_CURRENT_EVENT_TYPE_LIST_ITEM, SET_ERASING } from \"./types\";\r\n\r\nexport const setCurrentEventTypesListItem = (property) => {\r\n  return {\r\n    type: SET_CURRENT_EVENT_TYPE_LIST_ITEM,\r\n    payload: property, // { _id, title, color }\r\n  };\r\n};\r\n\r\nexport const setErasing = () => {\r\n  return {\r\n    type: SET_ERASING,\r\n    payload: null,\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { isBetween } from \"moment\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setTimeRange, setHover } from \"../../../../actions/timeActions\";\r\n\r\nimport \"./style.css\";\r\n\r\n// index ranges from 0 to 95 representing different times in a day\r\n\r\nconst TimeSlot = ({\r\n  // time: { final },\r\n  setTimeRange,\r\n  setHover,\r\n  index,\r\n  date,\r\n  isSelected,\r\n  property,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={`timeslot-container`}\r\n      style={{\r\n        filter: isSelected ? \"brightness(0.7)\" : \"brightness(1)\",\r\n        backgroundColor: property != null ? property.color : \"#ececec\",\r\n      }}\r\n      onMouseUp={() => {\r\n        setTimeRange({ date, index });\r\n      }}\r\n      // onMouseEnter={() => {\r\n      //   setHover({ date, index });\r\n      // }}\r\n    >\r\n      {property && property.title}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, {\r\n  setTimeRange,\r\n  setHover,\r\n})(TimeSlot);\r\n","import { SET_TIME_RANGE, SET_HOVER } from \"./types\";\r\n\r\nimport moment from \"moment\";\r\n\r\nexport const setTimeRange = ({ date, index }) => {\r\n  return {\r\n    type: SET_TIME_RANGE,\r\n    payload: { date: moment(date, \"YYYY:MM:DD\"), index },\r\n  };\r\n};\r\n\r\nexport const setHover = ({ date, index }) => {\r\n  return {\r\n    type: SET_HOVER,\r\n    payload: { date: moment(date, \"YYYY:MM:DD\"), index },\r\n  };\r\n};\r\n","import React, { useRef, Component, Fragment } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nimport TimeSlot from \"./TimeSlot\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { render } from \"react-dom\";\r\n\r\nconst TimeSlotMatrics = ({ date: { year, month, day }, style, timeslots }) => {\r\n  const monthsList = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"Aug\",\r\n    \"Sept\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  let m = monthsList[month - 1];\r\n  let d = day;\r\n  let y = year;\r\n\r\n  var times = [],\r\n    TimeslotItems = [];\r\n\r\n  // Display the time in a day\r\n  for (let i = 0; i < 24; i++) {\r\n    times.push(<div key={i}>{i + \":00\"}</div>);\r\n  }\r\n\r\n  for (let j = 0; j < 96; j++) {\r\n    if (timeslots[j].property != null) {\r\n      TimeslotItems.push(\r\n        <TimeSlot\r\n          key={j}\r\n          date={year + \":\" + month + \":\" + day}\r\n          index={j}\r\n          isSelected={timeslots[j].isSelected}\r\n          property={timeslots[j].property}\r\n        />\r\n      );\r\n    } else {\r\n      TimeslotItems.push(\r\n        <TimeSlot\r\n          key={j}\r\n          date={year + \":\" + month + \":\" + day}\r\n          index={j}\r\n          isSelected={timeslots[j].isSelected}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={style} id={year + \":\" + month + \":\" + day}>\r\n      <div className=\"day-wrapper\">\r\n        <div className=\"date-label\">\r\n          <span>{m}</span>\r\n          <span>{d}</span>\r\n          <span>{y}</span>\r\n        </div>\r\n        <div className=\"time-label\">{times.map((time) => time)}</div>\r\n        <div className=\"timeslotItems-wrapper\">\r\n          {TimeslotItems.map((timeslot) => timeslot)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeSlotMatrics;\r\n","import React, { useRef, useState, useCallback, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport TimeSlotMatrics from \"./TimeSlotMatrics\";\r\n\r\nimport { setViewingDate } from \"../../../actions/navbarActions\";\r\n\r\nimport { FixedSizeList } from \"react-window\";\r\nimport moment from \"moment\";\r\nimport M from \"materialize-css\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst DayList = ({\r\n  navbar: { date, viewingDate },\r\n  setViewingDate,\r\n  days,\r\n  TimeSlot,\r\n  min,\r\n  max,\r\n}) => {\r\n  var listRef = useRef();\r\n  var parentRef = useRef();\r\n\r\n  const [height, setHeight] = useState(0);\r\n  const [width, setWidth] = useState(0);\r\n  const [loaded, setLoaded] = useState(0);\r\n\r\n  const updateSize = () => {\r\n    if (parentRef.current) {\r\n      setHeight(parentRef.current.offsetHeight);\r\n      setWidth(parentRef.current.offsetWidth);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"Rendered once\");\r\n    M.AutoInit();\r\n    setLoaded(true);\r\n    updateSize();\r\n    window.addEventListener(\"resize\", () => updateSize());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    scrollToDate(moment(date));\r\n  }, [loaded]);\r\n\r\n  useEffect(() => {\r\n    scrollToDate(moment(date));\r\n    // renderTodayPointer();\r\n  }, [date]);\r\n\r\n  const getDateFromOffset = (offset) => {\r\n    return moment(min).add(offset, \"day\");\r\n  };\r\n\r\n  const getDateOffset = (date) => {\r\n    return date.diff(min, \"days\");\r\n  };\r\n\r\n  const scrollToDate = async (date = 0, ...rest) => {\r\n    let offsetTop = getDateOffset(date);\r\n\r\n    await listRef.current.scrollToItem(offsetTop, \"center\");\r\n    // renderTodayPointer();\r\n  };\r\n\r\n  const renderDay = ({ index, style }) => {\r\n    let { day, month, year, timeslots } = days[index];\r\n    let key = `${year}:${month}:${day}`;\r\n\r\n    // renderTodayPointer();\r\n    // setInterval(() => {\r\n    //   renderTodayPointer();\r\n    // }, 60000);\r\n\r\n    return (\r\n      <TimeSlotMatrics\r\n        key={key}\r\n        style={style}\r\n        date={{ year, month, day }}\r\n        timeslots={timeslots}\r\n        TimeSlot={TimeSlot}\r\n      />\r\n    );\r\n  };\r\n\r\n  // BUGGED\r\n  // Find the current timeslot and append class \"current\" to it\r\n  // const renderTodayPointer = () => {\r\n  //   // Remove previous pointer if there is any\r\n  //   if (document.getElementsByClassName(\"current\")[0]) {\r\n  //     document.getElementsByClassName(\"current\")[0].remove();\r\n  //   }\r\n\r\n  //   // Add a pointer\r\n  //   const matricsElm = document.getElementById(moment().format(\"YYYY:M:D\"));\r\n\r\n  //   if (matricsElm !== null) {\r\n  //     var overlay = document.createElement(\"div\");\r\n  //     overlay.className = \"current\";\r\n\r\n  //     const time = moment().diff(moment().startOf(\"day\"), \"minutes\");\r\n  //     const current = matricsElm\r\n  //       .getElementsByClassName(\"timeslots-wrapper\")[0]\r\n  //       .children.item(Math.ceil(time / 15));\r\n  //     current.appendChild(overlay);\r\n  //     current.getElementsByClassName(\r\n  //       \"current\"\r\n  //     )[0].style.transform = `translatex(${((time % 15) / 15) * 640}%)`;\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div style={{ height: \"93.5vh\" }} ref={parentRef}>\r\n      <FixedSizeList\r\n        className=\"infiniteList\"\r\n        ref={listRef}\r\n        height={height}\r\n        width={width}\r\n        itemCount={days.length}\r\n        itemSize={height}\r\n        children={renderDay}\r\n        onScroll={(scrollTop) => {\r\n          let temp = getDateFromOffset(\r\n            Math.round(scrollTop.scrollOffset / height)\r\n          );\r\n\r\n          if (temp.diff(viewingDate, \"day\") != 0) {\r\n            setViewingDate(temp.startOf(\"day\"));\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    navbar: state.navbar,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setViewingDate })(DayList);\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./style.css\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst EventTypesListItem = ({\r\n  _id,\r\n  title,\r\n  color,\r\n  onEventTypesListItemClick,\r\n}) => {\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const itemStyle = {\r\n    display: \"block\",\r\n    width: \"8rem\",\r\n    margin: \"0.5rem\",\r\n    border: \"2px solid \" + color,\r\n    padding: \"0 0.5rem 0\",\r\n    letterSpacing: \"0.5px\",\r\n    color: color,\r\n    backgroundColor: \"white\",\r\n    transition: \"all 0.25s ease-in-out\",\r\n  };\r\n\r\n  const itemHoverStyle = {\r\n    display: \"block\",\r\n    width: \"8rem\",\r\n    margin: \"0.5rem\",\r\n    border: \"2px solid \" + color,\r\n    padding: \"0 0.5rem 0\",\r\n    letterSpacing: \"0.5px\",\r\n    transition: \"all 0.25s ease-in-out\",\r\n    backgroundColor: color,\r\n    color: \"white\",\r\n  };\r\n\r\n  var style;\r\n  if (hover) {\r\n    style = itemHoverStyle;\r\n  } else {\r\n    style = itemStyle;\r\n  }\r\n\r\n  return (\r\n    <div className=\"event-types-list-item-wrapper\">\r\n      <a\r\n        //eslint-dsiable-next-line\r\n        style={style}\r\n        onMouseEnter={() => setHover(true)}\r\n        onMouseLeave={() => setHover(false)}\r\n        onClick={() => {\r\n          onEventTypesListItemClick(_id, title, color);\r\n        }}\r\n      >\r\n        {title}\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nEventTypesListItem.propTypes = {};\r\n\r\nexport default EventTypesListItem;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  setCurrentEventTypesListItem,\r\n  setErasing,\r\n} from \"../../../actions/eventTypesListItemActions.js\";\r\nimport EventTypesListItem from \"./EventTypesListItem\";\r\nimport \"./style.css\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst EventTypesList = ({\r\n  event: { events },\r\n  eventTypes: { eventTypes },\r\n  navbar: { viewingDate },\r\n  time: { start, end, final },\r\n  setCurrentEventTypesListItem,\r\n  setErasing,\r\n  height,\r\n}) => {\r\n  const onEventTypesListItemClick = (_id, title, color) => {\r\n    if (final == true && start != null && end != null) {\r\n      setCurrentEventTypesListItem({ _id, title, color });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"event-types-list-wrapper\">\r\n      <div>\r\n        <h5>Temporary</h5>\r\n        {events.map((item) => {\r\n          if (viewingDate.isBetween(item.start, item.end, \"day\", \"[)\")) {\r\n            return (\r\n              <EventTypesListItem\r\n                key={item._id + \"t\"}\r\n                _id={item._id + \"t\"}\r\n                title={item.title}\r\n                color={item.color}\r\n                onEventTypesListItemClick={onEventTypesListItemClick}\r\n              />\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n      <div>\r\n        <h5>Recurring</h5>\r\n        {eventTypes.map((item) => (\r\n          <EventTypesListItem\r\n            key={item._id + \"r\"}\r\n            _id={item._id + \"r\"}\r\n            title={item.title}\r\n            color={item.color}\r\n            onEventTypesListItemClick={onEventTypesListItemClick}\r\n          />\r\n        ))}\r\n        <h5>Tools</h5>\r\n        <EventTypesListItem\r\n          _id={\"eraser\"}\r\n          title={\"Eraser\"}\r\n          color={\"#000000\"}\r\n          onEventTypesListItemClick={setErasing}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    eventTypes: state.eventTypes,\r\n    event: state.event,\r\n    navbar: state.navbar,\r\n    time: state.time,\r\n  };\r\n};\r\n\r\nEventTypesList.propTypes = {};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setCurrentEventTypesListItem,\r\n  setErasing,\r\n})(EventTypesList);\r\n","import React, { Component, useState, useEffect, useRef } from \"react\";\r\nimport moment, { min } from \"moment\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setCurrentEventTypesListItem,\r\n  setErasing,\r\n} from \"../../actions/eventTypesListItemActions\";\r\n\r\nimport TimeSlot from \"./DayList/TimeSlot\";\r\nimport DayList from \"./DayList\";\r\nimport EventTypesList from \"./EventTypesList\";\r\n\r\nimport \"./style.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst deepCopy = (arr) => {\r\n  let copy = [];\r\n  arr.forEach((elem) => {\r\n    if (Array.isArray(elem)) {\r\n      copy.push(deepCopy(elem));\r\n    } else {\r\n      copy.push(elem);\r\n    }\r\n  });\r\n  return copy;\r\n};\r\n\r\nclass DayBlocks extends Component {\r\n  constructor(props) {\r\n    super(...arguments);\r\n\r\n    const days = [];\r\n    var min = moment().startOf(\"year\").subtract(1, \"year\");\r\n    var max = moment().startOf(\"year\").add(1, \"year\");\r\n    for (let year = min.year(); year <= max.year(); year++) {\r\n      for (let month = 1; month <= 12; month++) {\r\n        for (\r\n          let day = 1;\r\n          day <= moment(year + \":\" + month, \"YYYY:MM\").daysInMonth();\r\n          day++\r\n        ) {\r\n          let timeslots = [];\r\n          let isSelected = false;\r\n          let property = null;\r\n          for (let index = 0; index < 96; index++) {\r\n            timeslots.push({ index, isSelected, property });\r\n          }\r\n          days.push({\r\n            year,\r\n            month,\r\n            day,\r\n            timeslots,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    this.state = {\r\n      TimeSlot,\r\n      days: days,\r\n      min: min,\r\n      max: max,\r\n      prevTime: null,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // Typical usage (don't forget to compare props):\r\n    const { time, eventTypesListItem } = this.props;\r\n    if (time != prevProps.time) {\r\n      if (time.final && time.start != null && time.end != null) {\r\n        console.log(\"select once\");\r\n        this.selectRange(time.start, time.end, true);\r\n        this.setState({ prevTime: time });\r\n      } else if (!time.final && this.state.prevTime != null) {\r\n        this.selectRange(\r\n          this.state.prevTime.start,\r\n          this.state.prevTime.end,\r\n          false\r\n        );\r\n        this.setState({ prevTime: null });\r\n      }\r\n    } else if (eventTypesListItem != prevProps.eventTypesListItem) {\r\n      if (\r\n        eventTypesListItem.currentEventTypesListItem !=\r\n          prevProps.eventTypesListItem.currentEventTypesListItem &&\r\n        time.final &&\r\n        time.start != null &&\r\n        time.end != null\r\n      ) {\r\n        console.log(\"paint once\");\r\n        this.paintRange(\r\n          time.start,\r\n          time.end,\r\n          eventTypesListItem.currentEventTypesListItem\r\n        );\r\n        this.selectRange(\r\n          this.state.prevTime.start,\r\n          this.state.prevTime.end,\r\n          false\r\n        );\r\n        this.setState({ prevTime: null });\r\n      } else if (\r\n        eventTypesListItem.erasing != prevProps.eventTypesListItem.erasing &&\r\n        time.final &&\r\n        time.start != null &&\r\n        time.end != null\r\n      ) {\r\n        this.eraseRange(time.start, time.end);\r\n        setErasing();\r\n      }\r\n    }\r\n  }\r\n\r\n  paintRange(date1, date2, property) {\r\n    let startDate, endDate;\r\n    if (date1.date.diff(date2.date, \"days\") > 0) {\r\n      startDate = date2;\r\n      endDate = date1;\r\n    } else if (date1.date.diff(date2.date, \"days\") < 0) {\r\n      startDate = date1;\r\n      endDate = date2;\r\n    } else {\r\n      if (date1.index > date2.index) {\r\n        startDate = date2;\r\n        endDate = date1;\r\n      } else {\r\n        startDate = date1;\r\n        endDate = date2;\r\n      }\r\n    }\r\n\r\n    let newDays = deepCopy(this.state.days);\r\n\r\n    let startIndex = startDate.date.diff(this.state.min, \"days\");\r\n    let endIndex = endDate.date.diff(this.state.min, \"days\");\r\n    for (let i = startIndex; i <= endIndex; i++) {\r\n      if (startIndex == endIndex) {\r\n        for (let j = startDate.index; j <= endDate.index; j++) {\r\n          newDays[i].timeslots[j].property = property;\r\n        }\r\n      } else {\r\n        if (i == startIndex) {\r\n          for (let j = startDate.index; j < 96; j++) {\r\n            newDays[i].timeslots[j].property = property;\r\n          }\r\n        } else if (i == endIndex) {\r\n          for (let j = 0; j <= endDate.index; j++) {\r\n            newDays[i].timeslots[j].property = property;\r\n          }\r\n        } else {\r\n          for (let j = 0; j < 96; j++) {\r\n            newDays[i].timeslots[j].property = property;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    console.log(newDays);\r\n    this.setState({ days: newDays });\r\n  }\r\n\r\n  selectRange(date1, date2, isTrue) {\r\n    let startDate, endDate;\r\n    if (date1.date.diff(date2.date, \"days\") > 0) {\r\n      startDate = date2;\r\n      endDate = date1;\r\n    } else if (date1.date.diff(date2.date, \"days\") < 0) {\r\n      startDate = date1;\r\n      endDate = date2;\r\n    } else {\r\n      if (date1.index > date2.index) {\r\n        startDate = date2;\r\n        endDate = date1;\r\n      } else {\r\n        startDate = date1;\r\n        endDate = date2;\r\n      }\r\n    }\r\n\r\n    let newDays = deepCopy(this.state.days);\r\n\r\n    let startIndex = startDate.date.diff(this.state.min, \"days\");\r\n    let endIndex = endDate.date.diff(this.state.min, \"days\");\r\n    for (let i = startIndex; i <= endIndex; i++) {\r\n      if (startIndex == endIndex) {\r\n        for (let j = startDate.index; j <= endDate.index; j++) {\r\n          newDays[i].timeslots[j].isSelected = isTrue;\r\n        }\r\n      } else {\r\n        if (i == startIndex) {\r\n          for (let j = startDate.index; j < 96; j++) {\r\n            newDays[i].timeslots[j].isSelected = isTrue;\r\n          }\r\n        } else if (i == endIndex) {\r\n          for (let j = 0; j <= endDate.index; j++) {\r\n            newDays[i].timeslots[j].isSelected = isTrue;\r\n          }\r\n        } else {\r\n          for (let j = 0; j < 96; j++) {\r\n            newDays[i].timeslots[j].isSelected = isTrue;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.setState({ days: newDays });\r\n  }\r\n\r\n  eraseRange(date1, date2) {\r\n    let startDate, endDate;\r\n    if (date1.date.diff(date2.date, \"days\") > 0) {\r\n      startDate = date2;\r\n      endDate = date1;\r\n    } else if (date1.date.diff(date2.date, \"days\") < 0) {\r\n      startDate = date1;\r\n      endDate = date2;\r\n    } else {\r\n      if (date1.index > date2.index) {\r\n        startDate = date2;\r\n        endDate = date1;\r\n      } else {\r\n        startDate = date1;\r\n        endDate = date2;\r\n      }\r\n    }\r\n\r\n    let newDays = deepCopy(this.state.days);\r\n\r\n    let startIndex = startDate.date.diff(this.state.min, \"days\");\r\n    let endIndex = endDate.date.diff(this.state.min, \"days\");\r\n    for (let i = startIndex; i <= endIndex; i++) {\r\n      if (startIndex == endIndex) {\r\n        for (let j = startDate.index; j <= endDate.index; j++) {\r\n          newDays[i].timeslots[j].isSelected = false;\r\n          newDays[i].timeslots[j].property = null;\r\n        }\r\n      } else {\r\n        if (i == startIndex) {\r\n          for (let j = startDate.index; j < 96; j++) {\r\n            newDays[i].timeslots[j].isSelected = false;\r\n            newDays[i].timeslots[j].property = null;\r\n          }\r\n        } else if (i == endIndex) {\r\n          for (let j = 0; j <= endDate.index; j++) {\r\n            newDays[i].timeslots[j].isSelected = false;\r\n            newDays[i].timeslots[j].property = null;\r\n          }\r\n        } else {\r\n          for (let j = 0; j < 96; j++) {\r\n            newDays[i].timeslots[j].isSelected = false;\r\n            newDays[i].timeslots[j].property = null;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.setState({ days: newDays });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"days-wrapper\">\r\n        <div className=\"timeGrids-container\">\r\n          <DayList\r\n            days={this.state.days}\r\n            TimeSlot={this.state.TimeSlot}\r\n            min={this.state.min}\r\n            max={this.state.max}\r\n          />\r\n        </div>\r\n        <EventTypesList height={\"100%\"} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    time: state.time,\r\n    eventTypesListItem: state.eventTypesListItem,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setCurrentEventTypesListItem })(\r\n  DayBlocks\r\n);\r\n","import React from \"react\";\r\n\r\nconst AddBtn = () => {\r\n  return (\r\n    <div className=\"fixed-action-btn\">\r\n      <a\r\n        href=\"#add-event-type-modal\"\r\n        className=\"btn-floating btn-large blue darken-2 modal-trigger\"\r\n      >\r\n        <i className=\"large material-icons\">add</i>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBtn;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n// import TechSelectOptions from \"../techs/TechSelectOptions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addEventType } from \"../../actions/eventTypesActions\";\r\n\r\nimport { BlockPicker } from \"react-color\";\r\n\r\nimport M from \"materialize-css\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst AddEventTypeModal = ({ eventTypes: { eventTypes }, addEventType }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [color, setColor] = useState(\"#e6ff80\");\r\n\r\n  const onSubmit = () => {\r\n    if (title === \"\") {\r\n      M.toast({ html: \"Please enter a title\" });\r\n    } else {\r\n      // Check if startDate is before endDate\r\n\r\n      let isUnique = true;\r\n\r\n      eventTypes.map((eventType) => {\r\n        if (eventType.title == title) {\r\n          isUnique = false;\r\n        }\r\n      });\r\n\r\n      if (isUnique) {\r\n        const newEventType = {\r\n          title: title,\r\n          color: color,\r\n        };\r\n\r\n        addEventType(newEventType);\r\n\r\n        M.toast({ html: `Event Type Added` });\r\n      } else {\r\n        M.toast({ html: `Duplicating Event Type` });\r\n      }\r\n\r\n      // Clear Fields\r\n      setTitle(\"\");\r\n      setColor(\"#e6ff80\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"add-event-type-modal\" className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <h4>Enter A New Event Type</h4>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <label htmlFor=\"title\" className=\"active\">\r\n              Title\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <BlockPicker\r\n            width=\"100%\"\r\n            onChangeComplete={(color) => setColor(color.hex)}\r\n            color={color}\r\n            colors={[\r\n              \"#FF6633\",\r\n              \"#FFB399\",\r\n              \"#FF33FF\",\r\n              \"#FFFF99\",\r\n              \"#00B3E6\",\r\n              \"#E6B333\",\r\n              \"#3366E6\",\r\n              \"#999966\",\r\n              \"#99FF99\",\r\n              \"#B34D4D\",\r\n              \"#80B300\",\r\n              \"#809900\",\r\n              \"#E6B3B3\",\r\n              \"#6680B3\",\r\n              \"#66991A\",\r\n              \"#FF99E6\",\r\n              \"#CCFF1A\",\r\n              \"#FF1A66\",\r\n              \"#E6331A\",\r\n              \"#33FFCC\",\r\n              \"#66994D\",\r\n              \"#B366CC\",\r\n              \"#4D8000\",\r\n              \"#B33300\",\r\n              \"#CC80CC\",\r\n              \"#66664D\",\r\n              \"#991AFF\",\r\n              \"#E666FF\",\r\n              \"#4DB3FF\",\r\n              \"#1AB399\",\r\n              \"#E666B3\",\r\n              \"#33991A\",\r\n              \"#CC9999\",\r\n              \"#B3B31A\",\r\n              \"#00E680\",\r\n              \"#4D8066\",\r\n              \"#809980\",\r\n              \"#E6FF80\",\r\n              \"#1AFF33\",\r\n              \"#999933\",\r\n              \"#FF3380\",\r\n              \"#CCCC00\",\r\n              \"#66E64D\",\r\n              \"#4D80CC\",\r\n              \"#9900B3\",\r\n              \"#E64D66\",\r\n              \"#4DB380\",\r\n              \"#FF4D4D\",\r\n              \"#99E6E6\",\r\n              \"#6666FF\",\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onSubmit}\r\n          className=\"modal-close waves-effect waves btn\"\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    eventTypes: state.eventTypes,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addEventType })(AddEventTypeModal);\r\n","import {\r\n  ADD_EVENT_TYPE,\r\n  ADD_EVENT_TYPE_ERROR,\r\n  UPDATE_EVENT_TYPE,\r\n  UPDATE_EVENT_TYPE_ERROR,\r\n  DELETE_EVENT_TYPE,\r\n  DELETE_EVENT_TYPE_ERROR,\r\n  SET_CURRENT_EVENT_TYPE,\r\n} from \"./types\";\r\n\r\nimport { v4 as uuid } from \"uuid\"; //Dev use only\r\n\r\n// Add new event\r\nexport const addEventType = ({ title, color }) => async (dispatch) => {\r\n  try {\r\n    // Implement REST API Here\r\n\r\n    // const res = await fetch(\"./logs\");\r\n    // const data = await res.json();\r\n\r\n    // uuid as placeholder\r\n    const id = uuid();\r\n\r\n    const content = { title, color, _id: id };\r\n    console.log(content);\r\n    dispatch({\r\n      type: ADD_EVENT_TYPE,\r\n      payload: content,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ADD_EVENT_TYPE_ERROR,\r\n      payload: err.response,\r\n    });\r\n  }\r\n};\r\n\r\n// Update existing event\r\nexport const updateEventType = ({ title, color, _id: id }) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    // Implement REST API Here\r\n\r\n    // const res = await fetch(\"./logs\");\r\n    // const data = await res.json();\r\n\r\n    // uuid as placeholder\r\n    const content = { title, color, _id: id };\r\n    console.log(content);\r\n    dispatch({\r\n      type: UPDATE_EVENT_TYPE,\r\n      payload: content,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: UPDATE_EVENT_TYPE_ERROR,\r\n      payload: err.response,\r\n    });\r\n  }\r\n};\r\n\r\n// Delete existing event\r\nexport const deleteEventType = (_id) => async (dispatch) => {\r\n  try {\r\n    // Implement REST API Here\r\n\r\n    // const res = await fetch(\"./logs\");\r\n    // const data = await res.json();\r\n\r\n    dispatch({\r\n      type: DELETE_EVENT_TYPE,\r\n      payload: _id,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: DELETE_EVENT_TYPE_ERROR,\r\n      payload: err.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const setCurrentEventType = (currentEvent) => {\r\n  return {\r\n    type: SET_CURRENT_EVENT_TYPE,\r\n    payload: currentEvent,\r\n  };\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  updateEventType,\r\n  deleteEventType,\r\n} from \"../../actions/eventTypesActions\";\r\n\r\nimport { BlockPicker } from \"react-color\";\r\nimport M from \"materialize-css\";\r\n\r\nconst EditEventTypeModal = ({\r\n  eventTypes: { eventTypes, eventType: currenEventType },\r\n  updateEventType,\r\n  deleteEventType,\r\n}) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [color, setColor] = useState(\"#e6ff80\");\r\n\r\n  // ComponentDidMount\r\n  useEffect(() => {\r\n    if (currenEventType !== {}) {\r\n      document.getElementsByName(\"title\")[1].focus();\r\n      setTitle(currenEventType.title);\r\n      setColor(currenEventType.color);\r\n    }\r\n  }, [currenEventType]);\r\n\r\n  const onDelete = () => {\r\n    deleteEventType(currenEventType._id);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (title === \"\") {\r\n      M.toast({ html: \"Please enter a title\" });\r\n    } else {\r\n      // Check if startDate is before endDate\r\n\r\n      let isUnique = true;\r\n\r\n      eventTypes.map((eventType) => {\r\n        if (\r\n          eventType.title == title &&\r\n          // Ensures not duplicating with other event types except the original one\r\n          eventType.title !== currenEventType.title\r\n        ) {\r\n          isUnique = false;\r\n        }\r\n      });\r\n\r\n      if (isUnique) {\r\n        const newEventType = {\r\n          _id: currenEventType._id,\r\n          title: title,\r\n          color: color,\r\n        };\r\n\r\n        updateEventType(newEventType);\r\n\r\n        M.toast({ html: `Event Type Updated` });\r\n      } else {\r\n        M.toast({ html: `Duplicating Event Type` });\r\n      }\r\n\r\n      // Clear Fields\r\n      setTitle(\"\");\r\n      setColor(\"#e6ff80\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"edit-event-type-modal\" className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <h4>Edit the Event Type</h4>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <label htmlFor=\"title\" className=\"active\">\r\n              Title\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <BlockPicker\r\n            width=\"100%\"\r\n            onChangeComplete={(color) => setColor(color.hex)}\r\n            color={color}\r\n            colors={[\r\n              \"#FF6633\",\r\n              \"#FFB399\",\r\n              \"#FF33FF\",\r\n              \"#FFFF99\",\r\n              \"#00B3E6\",\r\n              \"#E6B333\",\r\n              \"#3366E6\",\r\n              \"#999966\",\r\n              \"#99FF99\",\r\n              \"#B34D4D\",\r\n              \"#80B300\",\r\n              \"#809900\",\r\n              \"#E6B3B3\",\r\n              \"#6680B3\",\r\n              \"#66991A\",\r\n              \"#FF99E6\",\r\n              \"#CCFF1A\",\r\n              \"#FF1A66\",\r\n              \"#E6331A\",\r\n              \"#33FFCC\",\r\n              \"#66994D\",\r\n              \"#B366CC\",\r\n              \"#4D8000\",\r\n              \"#B33300\",\r\n              \"#CC80CC\",\r\n              \"#66664D\",\r\n              \"#991AFF\",\r\n              \"#E666FF\",\r\n              \"#4DB3FF\",\r\n              \"#1AB399\",\r\n              \"#E666B3\",\r\n              \"#33991A\",\r\n              \"#CC9999\",\r\n              \"#B3B31A\",\r\n              \"#00E680\",\r\n              \"#4D8066\",\r\n              \"#809980\",\r\n              \"#E6FF80\",\r\n              \"#1AFF33\",\r\n              \"#999933\",\r\n              \"#FF3380\",\r\n              \"#CCCC00\",\r\n              \"#66E64D\",\r\n              \"#4D80CC\",\r\n              \"#9900B3\",\r\n              \"#E64D66\",\r\n              \"#4DB380\",\r\n              \"#FF4D4D\",\r\n              \"#99E6E6\",\r\n              \"#6666FF\",\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onDelete}\r\n          className=\"modal-close waves-effect waves-green btn-flat\"\r\n        >\r\n          Delete\r\n        </a>\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onSubmit}\r\n          className=\"modal-close waves-effect waves btn\"\r\n        >\r\n          Update\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: \"75%\",\r\n  height: \"75%\",\r\n  maxHeight: \"100%\",\r\n  overflow: \"visible\",\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    eventTypes: state.eventTypes,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { updateEventType, deleteEventType })(\r\n  EditEventTypeModal\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setCurrentEventType } from \"../../../actions/eventTypesActions\";\r\n\r\nimport M from \"materialize-css\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst EventTypeItem = ({ title, color, _id, setCurrentEventType }) => {\r\n  useEffect(() => {\r\n    M.AutoInit();\r\n  }, []);\r\n\r\n  return (\r\n    <li class=\"collection-item\">\r\n      <div>\r\n        <span className=\"dot\" style={{ backgroundColor: color }} />\r\n        <span className=\"content\">{title}</span>\r\n        <a\r\n          href=\"#edit-event-type-modal\"\r\n          className=\"modal-trigger secondary-content\"\r\n          onClick={() => setCurrentEventType({ title, color, _id })}\r\n        >\r\n          <i class=\"material-icons\">edit</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nEventTypeItem.propTypes = {};\r\n\r\nexport default connect(null, { setCurrentEventType })(EventTypeItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport AddBtn from \"./AddBtn\";\r\nimport AddEventTypeModal from \"./AddEventTypeModal\";\r\nimport EditEventTypeModal from \"./EditEventTypeModal\";\r\nimport EventTypeItem from \"./EventTypeItem\";\r\n\r\nimport \"./style.css\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst EventTypes = ({ eventTypes: { eventTypes } }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <ul class=\"collection with-header\">\r\n        <li class=\"collection-header\">\r\n          <h4>Recurring Event Types</h4>\r\n        </li>\r\n        {eventTypes.map((eventType) => (\r\n          <EventTypeItem\r\n            color={eventType.color}\r\n            title={eventType.title}\r\n            _id={eventType._id}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <AddEventTypeModal />\r\n      <EditEventTypeModal />\r\n      <AddBtn />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    eventTypes: state.eventTypes,\r\n  };\r\n};\r\n\r\nEventTypes.propTypes = {};\r\n\r\nexport default connect(mapStateToProps, {})(EventTypes);\r\n","import React, { useEffect, Fragment } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport store from \"./store\";\r\n\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport CalendarView from \"./components/Calendar\";\r\nimport TimeGrids from \"./components/TimeGrids\";\r\nimport EventTypes from \"./components/EventTypes\";\r\n\r\nimport \"materialize-css/dist/css/materialize.min.css\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nimport \"./css/App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Route\r\n            path=\"/\"\r\n            render={() => (\r\n              <Fragment>\r\n                <Navbar />\r\n              </Fragment>\r\n            )}\r\n          />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/calendar\"\r\n              render={() => (\r\n                <Fragment>\r\n                  <CalendarView />\r\n                </Fragment>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path={[\"/\", \"/day\"]}\r\n              render={() => (\r\n                <Fragment>\r\n                  <TimeGrids />\r\n                </Fragment>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/event-types\"\r\n              render={() => (\r\n                <Fragment>\r\n                  <EventTypes />\r\n                </Fragment>\r\n              )}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}