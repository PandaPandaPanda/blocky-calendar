{"version":3,"sources":["components/TimeGrids/MarkDown/README.md","reducers/timeReducer.js","reducers/eventReducer.js","reducers/navbarReducer.js","reducers/eventTypesReducer.js","reducers/eventTypesListItemReducer.js","reducers/index.js","actions/types.js","store.js","components/layout/Navbar.js","actions/navbarActions.js","components/Calendar/AddEventModal.js","actions/eventActions.js","components/Calendar/EditEventModal.js","components/Calendar/index.js","actions/eventTypesListItemActions.js","components/TimeGrids/MarkDown/index.js","components/TimeGrids/DayList/TimeSlot/index.js","actions/timeActions.js","components/TimeGrids/DayList/TimeSlotMatrics.js","components/TimeGrids/DayList/index.js","components/TimeGrids/EventTypesList/EventTypesListItem/index.js","components/TimeGrids/EventTypesList/index.js","components/TimeGrids/index.js","components/EventTypes/AddBtn.js","components/EventTypes/AddEventTypeModal.js","actions/eventTypesActions.js","components/EventTypes/EditEventTypeModal.js","components/EventTypes/EventTypeItem/index.js","components/EventTypes/index.js","App.js","index.js"],"names":["module","exports","initialState","events","_id","start","moment","startOf","add","toDate","end","title","color","event","editing","date","viewingDate","days","min","subtract","max","year","month","day","daysInMonth","timeslots","index","push","isSelected","property","final","prevTime","eventTypes","eventType","currentEventTypesListItem","erasing","combineReducers","state","action","type","payload","map","filter","console","log","error","navbar","time","item","eventTypesListItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","connect","setDate","selectedDate","useState","format","setDay","useEffect","M","AutoInit","className","id","style","position","zIndex","allowPast","dateFormat","name","handleChange","value","wrapperStyle","display","margin","width","inputStyle","background","borderRadius","paddingLeft","startDate","endDate","href","data-target","to","modalStyle","height","maxHeight","overflow","addEvent","hour","dispatch","a","uuid","content","defaultColors","Math","floor","random","length","err","response","setTitle","setHour","refStart","useRef","refEnd","options","defaultDate","Date","setDefaultDate","elem","document","getElementsByName","Datepicker","init","onChange","e","target","htmlFor","ref","onClick","toast","html","newEvent","current","updateEvent","deleteEvent","focus","els","getElementsByClassName","Array","prototype","forEach","call","el","localizer","momentLocalizer","DnDCalendar","withDragAndDrop","Calendar","resizeEvent","updatedEvent","setCurrentEvent","currentEvent","setEditing","editEventModalRef","addEventModalRef","defaultView","onEventDrop","onEventResize","onSelectSlot","click","onSelectEvent","toolbar","onNavigate","resizable","selectable","popup","components","dateHeader","label","setCurrentEventTypesListItem","setErasing","MarkDown","markdown","setMarkdown","fetch","AppMarkdown","then","res","text","remarkPlugins","remarkGfm","rehypePlugins","rehypeRaw","setTimeRange","setHover","backgroundColor","onMouseUp","TimeSlotMatrics","m","d","y","times","TimeslotItems","i","key","j","timeslot","setViewingDate","TimeSlot","listRef","parentRef","setHeight","loaded","setLoaded","updateSize","offsetHeight","window","addEventListener","scrollToDate","getDateOffset","diff","offsetTop","scrollToItem","itemCount","itemSize","children","onScroll","scrollTop","offset","temp","round","scrollOffset","EventTypesListItem","onEventTypesListItemClick","hover","border","padding","letterSpacing","transition","onMouseEnter","onMouseLeave","isBetween","deepCopy","arr","copy","isArray","DayBlocks","props","arguments","prevProps","prevState","this","selectRange","setPrevTime","paintRange","eraseRange","date1","date2","newDays","startIndex","endIndex","setDays","isTrue","Component","AddBtn","addEventType","setColor","onChangeComplete","hex","colors","isUnique","updateEventType","deleteEventType","currenEventType","newEventType","setCurrentEventType","class","App","path","render","exact","TimeGrids","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.1e4f553e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/README.dd7bbaad.md\";","import moment from \"moment\";\r\n\r\nimport {\r\n  SET_DAYS,\r\n  SET_PREVTIME,\r\n  SET_HOVER,\r\n  SET_TIME_RANGE,\r\n} from \"../actions/types\";\r\n\r\nconst days = [];\r\nvar min = moment().startOf(\"year\").subtract(1, \"year\");\r\nvar max = moment().startOf(\"year\").add(1, \"year\");\r\nfor (let year = min.year(); year <= max.year(); year++) {\r\n  for (let month = 1; month <= 12; month++) {\r\n    for (\r\n      let day = 1;\r\n      day <= moment(year + \":\" + month, \"YYYY:MM\").daysInMonth();\r\n      day++\r\n    ) {\r\n      let timeslots = [];\r\n      let isSelected = false;\r\n      let property = null;\r\n      for (let index = 0; index < 96; index++) {\r\n        timeslots.push({ index, isSelected, property });\r\n      }\r\n      days.push({\r\n        year,\r\n        month,\r\n        day,\r\n        timeslots,\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  start: null,\r\n  end: null,\r\n  final: true,\r\n  days: days,\r\n  prevTime: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_TIME_RANGE:\r\n      if (state.final == true) {\r\n        return {\r\n          ...state,\r\n          start: action.payload,\r\n          // Reset end\r\n          end: null,\r\n          final: false,\r\n        };\r\n      } else if (state.start != null) {\r\n        return {\r\n          ...state,\r\n          end: action.payload,\r\n          final: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          start: action.payload,\r\n          // Reset end\r\n          end: null,\r\n          final: false,\r\n        };\r\n      }\r\n    case SET_DAYS:\r\n      return {\r\n        ...state,\r\n        days: action.payload,\r\n      };\r\n    case SET_PREVTIME:\r\n      return {\r\n        ...state,\r\n        prevTime: action.payload,\r\n      };\r\n    case SET_HOVER:\r\n      if (state.final == false && state.start != null) {\r\n        return {\r\n          ...state,\r\n          end: action.payload,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_EVENT,\r\n  ADD_EVENT_ERROR,\r\n  DELETE_EVENT,\r\n  DELETE_EVENT_ERROR,\r\n  UPDATE_EVENT,\r\n  UPDATE_EVENT_ERROR,\r\n  RESIZE_EVENT,\r\n  RESIZE_ERROR,\r\n  SET_CURRENT_EVENT,\r\n  SET_EDITING,\r\n} from \"../actions/types\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst initialState = {\r\n  // Later get these from database\r\n  events: [\r\n    {\r\n      _id: 1,\r\n      start: moment().startOf(\"day\").add(2, \"days\").toDate(),\r\n      end: moment().startOf(\"day\").add(4, \"days\").toDate(),\r\n      title: \"Project Prototyping\",\r\n      color: \"#99E6E6\",\r\n    },\r\n    {\r\n      _id: 2,\r\n      start: moment().startOf(\"day\").toDate(),\r\n      end: moment().startOf(\"day\").add(1, \"days\").toDate(),\r\n      title: \"Interview\",\r\n      color: \"#4DB380\",\r\n    },\r\n    {\r\n      _id: 3,\r\n      start: moment().startOf(\"day\").add(7, \"days\").toDate(),\r\n      end: moment().startOf(\"day\").add(14, \"days\").toDate(),\r\n      title: \"Frontend Design\",\r\n      color: \"#99E6E6\",\r\n    },\r\n    {\r\n      _id: 4,\r\n      start: moment().startOf(\"day\").add(4, \"days\").toDate(),\r\n      end: moment().startOf(\"day\").add(6, \"days\").toDate(),\r\n      title: \"UI/UX Design\",\r\n      color: \"#99E6E6\",\r\n    },\r\n  ],\r\n\r\n  // selected event\r\n  event: {},\r\n  editing: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_EVENT:\r\n      return {\r\n        ...state,\r\n        events: [...state.events, { ...action.payload }],\r\n        event: {},\r\n        editing: false,\r\n      };\r\n    case UPDATE_EVENT:\r\n      return {\r\n        ...state,\r\n        events: state.events.map((event) =>\r\n          event._id === action.payload._id ? action.payload : event\r\n        ),\r\n        event: {},\r\n        editing: false,\r\n      };\r\n    case DELETE_EVENT:\r\n      return {\r\n        ...state,\r\n        events: state.events.filter((events) => events._id !== action.payload),\r\n        event: {},\r\n        editing: false,\r\n      };\r\n    case SET_CURRENT_EVENT:\r\n      return {\r\n        ...state,\r\n        event: action.payload,\r\n      };\r\n    case RESIZE_EVENT:\r\n      return {\r\n        ...state,\r\n        events: state.events.map((event) =>\r\n          event._id === action.payload._id ? action.payload : event\r\n        ),\r\n      };\r\n    case (RESIZE_ERROR,\r\n    ADD_EVENT_ERROR,\r\n    UPDATE_EVENT_ERROR,\r\n    DELETE_EVENT_ERROR):\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case SET_EDITING:\r\n      return {\r\n        ...state,\r\n        editing: !state.editing,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_DATE, SET_VIEWING_DATE } from \"../actions/types\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst initialState = {\r\n  date: moment(),\r\n  viewingDate: moment().startOf(\"day\"),\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_DATE:\r\n      return {\r\n        ...state,\r\n        date: action.payload,\r\n      };\r\n    case SET_VIEWING_DATE:\r\n      return {\r\n        ...state,\r\n        viewingDate: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_EVENT_TYPE,\r\n  ADD_EVENT_TYPE_ERROR,\r\n  SET_CURRENT_EVENT_TYPE,\r\n  UPDATE_EVENT_TYPE,\r\n  UPDATE_EVENT_TYPE_ERROR,\r\n  DELETE_EVENT_TYPE,\r\n  DELETE_EVENT_TYPE_ERROR,\r\n} from \"../actions/types\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst initialState = {\r\n  // Later get these from database\r\n  eventTypes: [\r\n    {\r\n      _id: \"1\",\r\n      title: \"Gym\",\r\n      color: \"#33991a\",\r\n    },\r\n    {\r\n      _id: \"2\",\r\n      title: \"Guitar\",\r\n      color: \"#00FFFF\",\r\n    },\r\n    {\r\n      _id: \"3\",\r\n      title: \"Reading\",\r\n      color: \"#4D80CC\",\r\n    },\r\n  ],\r\n\r\n  // selected event\r\n  eventType: {},\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_EVENT_TYPE:\r\n      return {\r\n        ...state,\r\n        eventTypes: [...state.eventTypes, { ...action.payload }],\r\n        event: {},\r\n      };\r\n    case UPDATE_EVENT_TYPE:\r\n      return {\r\n        ...state,\r\n        eventTypes: state.eventTypes.map((item) =>\r\n          item._id === action.payload._id ? action.payload : item\r\n        ),\r\n        eventType: {},\r\n      };\r\n    case DELETE_EVENT_TYPE:\r\n      return {\r\n        ...state,\r\n        eventTypes: state.eventTypes.filter(\r\n          (item) => item._id !== action.payload\r\n        ),\r\n        eventType: {},\r\n      };\r\n    case SET_CURRENT_EVENT_TYPE:\r\n      return {\r\n        ...state,\r\n        eventType: action.payload,\r\n      };\r\n    case ADD_EVENT_TYPE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case UPDATE_EVENT_TYPE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case DELETE_EVENT_TYPE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SET_CURRENT_EVENT_TYPE_LIST_ITEM,\r\n  SET_ERASING,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  currentEventTypesListItem: null,\r\n  erasing: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_EVENT_TYPE_LIST_ITEM:\r\n      return {\r\n        ...state,\r\n        currentEventTypesListItem: action.payload,\r\n      };\r\n    case SET_ERASING:\r\n      return {\r\n        ...state,\r\n        erasing: !state.erasing,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport eventReducer from \"./eventReducer\";\r\nimport navbarReducer from \"./navbarReducer\";\r\nimport timeReducer from \"./timeReducer\";\r\nimport eventTypesReducer from \"./eventTypesReducer\";\r\nimport eventTypesListItemReducer from \"./eventTypesListItemReducer\";\r\n\r\nexport default combineReducers({\r\n  event: eventReducer,\r\n  navbar: navbarReducer,\r\n  time: timeReducer,\r\n  eventTypes: eventTypesReducer,\r\n  eventTypesListItem: eventTypesListItemReducer,\r\n});\r\n","// eventActions\r\nexport const ADD_EVENT = \"ADD_EVENT\";\r\nexport const ADD_EVENT_ERROR = \"ADD_EVENT_ERROR\";\r\nexport const DELETE_EVENT = \"DELETE_EVENT\";\r\nexport const DELETE_EVENT_ERROR = \"DELETE_EVENT_ERROR\";\r\nexport const UPDATE_EVENT = \"UPDATE_EVENT\";\r\nexport const UPDATE_EVENT_ERROR = \"UPDATE_EVENT_ERROR\";\r\nexport const RESIZE_EVENT = \"RESIZE_EVENT\";\r\nexport const RESIZE_ERROR = \"RESIZE_ERROR\";\r\nexport const SET_CURRENT_EVENT = \"SET_CURRENT_EVENT\";\r\nexport const SET_EDITING = \"SET_EDITING\";\r\n\r\n// navbarActions\r\nexport const SET_DATE = \"SET_DATE\";\r\nexport const SET_VIEWING_DATE = \"SET_VIEWING_DATE\";\r\n\r\n// timeActions\r\nexport const SET_TIME_RANGE = \"SET_TIME_RANGE\";\r\nexport const SET_DAYS = \"SET_DAYS\";\r\nexport const SET_PREVTIME = \"SET_PREVTIME\";\r\nexport const SET_HOVER = \"SET_HOVER\";\r\n\r\n// eventTypesActions\r\nexport const ADD_EVENT_TYPE = \"ADD_EVENT_TYPE\";\r\nexport const ADD_EVENT_TYPE_ERROR = \"ADD_EVENT_TYPE_ERROR\";\r\nexport const DELETE_EVENT_TYPE = \"DELETE_EVENT_TYPE\";\r\nexport const DELETE_EVENT_TYPE_ERROR = \"DELETE_EVENT_TYPE_ERROR\";\r\nexport const UPDATE_EVENT_TYPE = \"UPDATE_EVENT_TYPE\";\r\nexport const UPDATE_EVENT_TYPE_ERROR = \"UPDATE_EVENT_TYPE_ERROR\";\r\nexport const SET_CURRENT_EVENT_TYPE = \"SET_CURRENT_EVENT_TYPE\";\r\n\r\n// eventTypesListActions\r\nexport const SET_CURRENT_EVENT_TYPE_LIST_ITEM =\r\n  \"SET_CURRENT_EVENT_TYPE_LIST_ITEM\";\r\nexport const SET_ERASING = \"SET_ERASING\";\r\n","import { createStore, applyMiddleware } from \"redux\";\r\n// In order to use Redux extension\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n// Where all reducers are organized\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\n// Add all middleware into this array\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setDate } from \"../../actions/navbarActions\";\r\n\r\nimport moment from \"moment\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\nimport \"react-datez/dist/css/react-datez.css\";\r\nimport { ReactDatez } from \"react-datez\";\r\n\r\nimport \"./style.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Navbar = ({ navbar: { date: selectedDate }, setDate }) => {\r\n  // For now hardcoded the date range, congruen to DayList/index.js\r\n  var min = moment().startOf(\"year\").subtract(1, \"year\");\r\n  var max = moment().startOf(\"year\").add(1, \"year\");\r\n\r\n  const [day, setDay] = useState(moment().format());\r\n\r\n  useEffect(() => {\r\n    M.AutoInit();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setDay(selectedDate);\r\n  }, [selectedDate]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <nav\r\n        className=\"z-depth-0\"\r\n        id=\"navbar\"\r\n        style={{ position: \"relative\", zIndex: \"100\" }}\r\n      >\r\n        <div className=\"nav-wrapper\">\r\n          <ReactDatez\r\n            allowPast\r\n            dateFormat=\"MMM DD, YYYY\"\r\n            name=\"dateInput\"\r\n            handleChange={(date) => {\r\n              if (date !== \"\") {\r\n                // Local useState\r\n                setDay(date);\r\n                // Set date for redux\r\n                setDate(date);\r\n              }\r\n            }}\r\n            value={day}\r\n            wrapperStyle={{\r\n              display: \"inline-block\",\r\n              margin: \" 0.15rem 1rem 0rem 1rem\",\r\n              width: \"11rem\",\r\n            }}\r\n            inputStyle={{\r\n              background: \"white\",\r\n              borderRadius: \"1rem\",\r\n              paddingLeft: \"1rem\",\r\n            }}\r\n            startDate={min.format(\"MMM DD, YYYY\")}\r\n            endDate={max.format(\"MMM DD, YYYY\")}\r\n          />\r\n          <a href=\"#\" data-target=\"mobile-demo\" className=\"sidenav-trigger\">\r\n            <i className=\"material-icons\">menu</i>\r\n          </a>\r\n          <ul className=\"right hide-on-med-and-down\">\r\n            <li>\r\n              <Link to=\"/blocky-calendar/calendar\">Monthly Calendar</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/blocky-calendar/day\">Day Block</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/blocky-calendar/event-types\">Event Types</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n\r\n      <ul className=\"sidenav\" id=\"mobile-demo\">\r\n        <li>\r\n          <Link to=\"/blocky-calendar/calendar\">Monthly Calendar</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/blocky-calendar/day\">Day Block</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/blocky-calendar/event-types\">Event Types</Link>\r\n        </li>\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    navbar: state.navbar,\r\n  };\r\n};\r\n\r\nNavbar.propTypes = {};\r\n\r\nexport default connect(mapStateToProps, { setDate })(Navbar);\r\n","import { SET_DATE, SET_VIEWING_DATE } from \"./types\";\r\n\r\nexport const setDate = (date) => {\r\n  return {\r\n    type: SET_DATE,\r\n    payload: date,\r\n  };\r\n};\r\n\r\nexport const setViewingDate = (date) => {\r\n  return {\r\n    type: SET_VIEWING_DATE,\r\n    payload: date,\r\n  };\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n// import TechSelectOptions from \"../techs/TechSelectOptions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addEvent } from \"../../actions/eventActions\";\r\n\r\nimport \"materialize-css/dist/css/materialize.min.css\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst AddEventModal = ({\r\n  event: {\r\n    event: { start, end },\r\n  },\r\n  addEvent,\r\n}) => {\r\n  // _id, title, start, end, estimate hours (optional)\r\n  const [title, setTitle] = useState(\"\");\r\n  const [hour, setHour] = useState(\"\");\r\n  const refStart = useRef(\"\");\r\n  const refEnd = useRef(\"\");\r\n\r\n  useEffect(() => {\r\n    var options = {\r\n      defaultDate: new Date(moment(start).format(\"MMM DD, YYYY\")),\r\n      setDefaultDate: true,\r\n    };\r\n    var elem = document.getElementsByName(\"startDate\")[0];\r\n    var instance = M.Datepicker.init(elem, options);\r\n    // instance.open();\r\n    instance.setDate(new Date(moment(start).format(\"MMM DD, YYYY\")));\r\n  }, [start]);\r\n\r\n  useEffect(() => {\r\n    var options = {\r\n      defaultDate: new Date(moment(end).format(\"MMM DD, YYYY\")),\r\n      setDefaultDate: true,\r\n    };\r\n    var elem = document.getElementsByName(\"endDate\")[0];\r\n    var instance = M.Datepicker.init(elem, options);\r\n    // instance.open();\r\n    instance.setDate(new Date(moment(end).format(\"MMM DD, YYYY\")));\r\n  }, [end]);\r\n\r\n  const onSubmit = () => {\r\n    if (title === \"\") {\r\n      M.toast({ html: \"Please enter a title\" });\r\n    } else {\r\n      // Check if startDate is before endDate\r\n\r\n      const newEvent = {\r\n        title,\r\n        start: moment(refStart.current.value, \"MMM DD, YYYY\").toDate(),\r\n        // Calendar always select the start of the day, add one to makeup for the end date\r\n        end: moment(refEnd.current.value, \"MMM DD, YYYY\")\r\n          .add(1, \"days\")\r\n          .toDate(),\r\n        hour: hour ? hour : null,\r\n      };\r\n      addEvent(newEvent);\r\n\r\n      M.toast({ html: `Event added` });\r\n\r\n      // Clear Fields\r\n      setTitle(\"\");\r\n      setHour(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"add-event-modal\" className=\"modal\" style={modalStyle}>\r\n      <div className=\"modal-content\">\r\n        <h4>Enter A New Event</h4>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <label htmlFor=\"title\" className=\"active\">\r\n              Event Title\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"number\"\r\n              name=\"hour\"\r\n              value={hour}\r\n              onChange={(e) => setHour(e.target.value)}\r\n            />\r\n            <label htmlFor=\"hour\" className=\"active\">\r\n              Estimate Hours to Complete (Optional)\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              ref={refStart}\r\n              type=\"text\"\r\n              name=\"startDate\"\r\n              // value={startDate}\r\n              // onChange={(e) => setStartDate(e.target.value)}\r\n              className=\"datepicker\"\r\n            />\r\n            <label htmlFor=\"startDate\" className=\"active\">\r\n              Start Date\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              ref={refEnd}\r\n              type=\"text\"\r\n              name=\"endDate\"\r\n              // value={endDate}\r\n              // onChange={(e) => setEndDate(e.target.value)}\r\n              className=\"datepicker\"\r\n            />\r\n            <label htmlFor=\"endDate\" className=\"active\">\r\n              End Date\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onSubmit}\r\n          className=\"modal-close waves-effect waves btn\"\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: \"75%\",\r\n  height: \"75%\",\r\n  maxHeight: \"100%\",\r\n  overflow: \"visible\",\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    event: state.event,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addEvent })(AddEventModal);\r\n","import {\r\n  ADD_EVENT,\r\n  ADD_EVENT_ERROR,\r\n  DELETE_EVENT,\r\n  DELETE_EVENT_ERROR,\r\n  UPDATE_EVENT,\r\n  UPDATE_EVENT_ERROR,\r\n  RESIZE_EVENT,\r\n  RESIZE_ERROR,\r\n  SET_CURRENT_EVENT,\r\n  SET_EDITING,\r\n} from \"./types\";\r\n\r\nimport { v4 as uuid } from \"uuid\"; //Dev use only\r\n\r\n// Add new event\r\nexport const addEvent =\r\n  ({ title, hour, start, end }) =>\r\n  async (dispatch) => {\r\n    try {\r\n      // Implement REST API Here\r\n\r\n      // const res = await fetch(\"./logs\");\r\n      // const data = await res.json();\r\n\r\n      // uuid as placeholder\r\n      const id = uuid();\r\n\r\n      // Random Color\r\n      const defaultColors = [\r\n        \"#FF6633\",\r\n        \"#FFB399\",\r\n        \"#FF33FF\",\r\n        \"#FFFF99\",\r\n        \"#00B3E6\",\r\n        \"#E6B333\",\r\n        \"#3366E6\",\r\n        \"#999966\",\r\n        \"#99FF99\",\r\n        \"#B34D4D\",\r\n        \"#80B300\",\r\n        \"#809900\",\r\n        \"#E6B3B3\",\r\n        \"#6680B3\",\r\n        \"#66991A\",\r\n        \"#FF99E6\",\r\n        \"#CCFF1A\",\r\n        \"#FF1A66\",\r\n        \"#E6331A\",\r\n        \"#33FFCC\",\r\n        \"#66994D\",\r\n        \"#B366CC\",\r\n        \"#4D8000\",\r\n        \"#B33300\",\r\n        \"#CC80CC\",\r\n        \"#66664D\",\r\n        \"#991AFF\",\r\n        \"#E666FF\",\r\n        \"#4DB3FF\",\r\n        \"#1AB399\",\r\n        \"#E666B3\",\r\n        \"#33991A\",\r\n        \"#CC9999\",\r\n        \"#B3B31A\",\r\n        \"#00E680\",\r\n        \"#4D8066\",\r\n        \"#809980\",\r\n        \"#E6FF80\",\r\n        \"#1AFF33\",\r\n        \"#999933\",\r\n        \"#FF3380\",\r\n        \"#CCCC00\",\r\n        \"#66E64D\",\r\n        \"#4D80CC\",\r\n        \"#9900B3\",\r\n        \"#E64D66\",\r\n        \"#4DB380\",\r\n        \"#FF4D4D\",\r\n        \"#99E6E6\",\r\n        \"#6666FF\",\r\n      ];\r\n\r\n      const content = {\r\n        title,\r\n        hour,\r\n        start,\r\n        end,\r\n        _id: id,\r\n        color: defaultColors[Math.floor(Math.random() * defaultColors.length)],\r\n      };\r\n      dispatch({\r\n        type: ADD_EVENT,\r\n        payload: content,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: ADD_EVENT_ERROR,\r\n        payload: err.response,\r\n      });\r\n    }\r\n  };\r\n\r\n// Update existing event\r\nexport const updateEvent =\r\n  ({ _id, title, hour, start, end, color }) =>\r\n  async (dispatch) => {\r\n    try {\r\n      // Implement REST API Here\r\n\r\n      // const res = await fetch(\"./logs\");\r\n      // const data = await res.json();\r\n\r\n      // uuid as placeholder\r\n      const content = { title, hour, start, end, _id, color };\r\n      dispatch({\r\n        type: UPDATE_EVENT,\r\n        payload: content,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: UPDATE_EVENT_ERROR,\r\n        payload: err.response,\r\n      });\r\n    }\r\n  };\r\n\r\n// Delete existing event\r\nexport const deleteEvent = (_id) => async (dispatch) => {\r\n  try {\r\n    // Implement REST API Here\r\n\r\n    // const res = await fetch(\"./logs\");\r\n    // const data = await res.json();\r\n\r\n    dispatch({\r\n      type: DELETE_EVENT,\r\n      payload: _id,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: DELETE_EVENT_ERROR,\r\n      payload: err.response,\r\n    });\r\n  }\r\n};\r\n\r\n// Resize the selected event\r\nexport const resizeEvent =\r\n  ({ event, start, end }) =>\r\n  async (dispatch) => {\r\n    try {\r\n      var updatedEvent = event;\r\n      event.start = start;\r\n      event.end = end;\r\n\r\n      // Implement REST API Here\r\n\r\n      // const res = await fetch(\"./logs\");\r\n      // const data = await res.json();\r\n\r\n      dispatch({\r\n        type: RESIZE_EVENT,\r\n        payload: updatedEvent,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: RESIZE_ERROR,\r\n        payload: err.response,\r\n      });\r\n    }\r\n  };\r\n\r\n// Set event duration on monthly calendar for newly added event\r\nexport const setCurrentEvent = (currentEvent) => {\r\n  return {\r\n    type: SET_CURRENT_EVENT,\r\n    payload: currentEvent,\r\n  };\r\n};\r\n\r\nexport const setEditing = () => {\r\n  return {\r\n    type: SET_EDITING,\r\n  };\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n// import TechSelectOptions from \"../techs/TechSelectOptions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { updateEvent, deleteEvent } from \"../../actions/eventActions\";\r\n\r\nimport \"materialize-css/dist/css/materialize.min.css\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst EditEventModal = ({\r\n  event: { event, editing },\r\n  updateEvent,\r\n  deleteEvent,\r\n}) => {\r\n  // _id, title, start, end, estimate hours (optional)\r\n  const [title, setTitle] = useState(\"\");\r\n  const [hour, setHour] = useState(\"\");\r\n  const refStart = useRef(\"\");\r\n  const refEnd = useRef(\"\");\r\n\r\n  // ComponentDidMount\r\n  useEffect(() => {\r\n    if (editing === true) {\r\n      const { start, end } = event;\r\n\r\n      document.getElementsByName(\"title\")[1].focus();\r\n      setTitle(event.title);\r\n      // Preload hour input-field only if it exists\r\n      if (event.hour) {\r\n        document.getElementsByName(\"hour\")[1].focus();\r\n        setHour(event.hour);\r\n      }\r\n\r\n      var options = {\r\n        defaultDate: new Date(moment(start).format(\"MMM DD, YYYY\")),\r\n        setDefaultDate: true,\r\n      };\r\n      var elem = document.getElementsByName(\"startDate\")[1];\r\n      var instance = M.Datepicker.init(elem, options);\r\n      // instance.open();\r\n      instance.setDate(new Date(moment(start).format(\"MMM DD, YYYY\")));\r\n\r\n      var els = document.getElementsByClassName(\"input-field\");\r\n      Array.prototype.forEach.call(els, function (el) {\r\n        // Do stuff here\r\n        el.focus();\r\n      });\r\n\r\n      var options = {\r\n        defaultDate: new Date(moment(end).format(\"MMM DD, YYYY\")),\r\n        setDefaultDate: true,\r\n      };\r\n      // First on the list is AddEvenModal, then its EditEventModal\r\n      var elem = document.getElementsByName(\"endDate\")[1];\r\n      var instance = M.Datepicker.init(elem, options);\r\n      // instance.open();\r\n      instance.setDate(new Date(moment(end).format(\"MMM DD, YYYY\")));\r\n    }\r\n  }, [editing]);\r\n\r\n  const onDelete = () => {\r\n    deleteEvent(event._id);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (title === \"\") {\r\n      M.toast({ html: \"Please enter a title\" });\r\n    } else {\r\n      // Check if startDate is before endDate\r\n\r\n      const newEvent = {\r\n        _id: event._id,\r\n        color: event.color,\r\n        title,\r\n        start: moment(refStart.current.value, \"MMM DD, YYYY\").toDate(),\r\n        end: moment(refEnd.current.value, \"MMM DD, YYYY\").toDate(),\r\n        hour: hour ? hour : null,\r\n      };\r\n      updateEvent(newEvent);\r\n\r\n      M.toast({ html: `Event Updated` });\r\n\r\n      // Clear Fields\r\n      setTitle(\"\");\r\n      setHour(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"edit-event-modal\" className=\"modal\" style={modalStyle}>\r\n      <div className=\"modal-content\">\r\n        <h4>Edit Event</h4>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <label htmlFor=\"title\" className=\"active\">\r\n              Event Title\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"number\"\r\n              name=\"hour\"\r\n              value={hour}\r\n              onChange={(e) => setHour(e.target.value)}\r\n            />\r\n            <label htmlFor=\"hour\" className=\"active\">\r\n              Estimate Hours to Complete (Optional)\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              ref={refStart}\r\n              type=\"text\"\r\n              name=\"startDate\"\r\n              // value={startDate}\r\n              // onChange={(e) => setStartDate(e.target.value)}\r\n              className=\"datepicker\"\r\n            />\r\n            <label htmlFor=\"startDate\" className=\"active\">\r\n              Start Date\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              ref={refEnd}\r\n              type=\"text\"\r\n              name=\"endDate\"\r\n              // value={endDate}\r\n              // onChange={(e) => setEndDate(e.target.value)}\r\n              className=\"datepicker\"\r\n            />\r\n            <label htmlFor=\"endDate\" className=\"active\">\r\n              End Date\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onDelete}\r\n          className=\"modal-close waves-effect waves-green btn-flat\"\r\n        >\r\n          Delete\r\n        </a>\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onSubmit}\r\n          className=\"modal-close waves-effect waves btn\"\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: \"75%\",\r\n  height: \"75%\",\r\n  maxHeight: \"100%\",\r\n  overflow: \"visible\",\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    event: state.event,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { updateEvent, deleteEvent })(\r\n  EditEventModal\r\n);\r\n","import React, { useEffect, useRef, useState, Fragment } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport {\r\n  resizeEvent,\r\n  setCurrentEvent,\r\n  setEditing,\r\n} from \"../../actions/eventActions\";\r\n\r\nimport AddEventModal from \"./AddEventModal\";\r\nimport EditEventModal from \"./EditEventModal\";\r\n\r\nimport moment from \"moment\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\r\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport M from \"materialize-css\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\nconst DnDCalendar = withDragAndDrop(Calendar);\r\n\r\nconst CalendarView = ({\r\n  event: { events, editing },\r\n  navbar: { date },\r\n  resizeEvent,\r\n  setCurrentEvent,\r\n  setEditing,\r\n}) => {\r\n  var editEventModalRef = useRef();\r\n  var addEventModalRef = useRef();\r\n\r\n  useEffect(() => {\r\n    M.AutoInit();\r\n  }, []);\r\n\r\n  // Resize event\r\n  const onEventResize = ({ event, start, end }) => {\r\n    resizeEvent({ event, start, end });\r\n  };\r\n\r\n  // Move event\r\n  const onEventDrop = ({ event, start, end }) => {\r\n    resizeEvent({ event, start, end });\r\n  };\r\n\r\n  // New Event\r\n  const newEvent = (event) => {\r\n    setCurrentEvent(event);\r\n\r\n    addEventModalRef.current.click();\r\n  };\r\n\r\n  // Update selected event\r\n  const updateEvent = (event) => {\r\n    setCurrentEvent(event);\r\n\r\n    editEventModalRef.current.click();\r\n    setEditing();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"App\">\r\n        <DnDCalendar\r\n          defaultDate={moment().toDate()}\r\n          defaultView=\"month\"\r\n          // views={[\"month\", \"agenda\"]}\r\n          events={events}\r\n          localizer={localizer}\r\n          onEventDrop={onEventDrop}\r\n          onEventResize={onEventResize}\r\n          onSelectSlot={newEvent}\r\n          onSelectEvent={updateEvent}\r\n          toolbar={false}\r\n          // components={{ toolbar: CustomToolbar }}\r\n          date={moment(date).toDate()}\r\n          // No use, just to dismiss the alert, date selection is handled by datepicker\r\n          onNavigate={() => {}}\r\n          resizable\r\n          selectable\r\n          style={{ height: \"94vh\" }}\r\n          // messages={{\r\n          //   showMore: (target) => (\r\n          //     <div\r\n          //       style={{ cursor: \"pointer\" }}\r\n          //       onClick={(e, events) => {\r\n          //         console.log(events);\r\n          //         e.stopPropagation();\r\n          //         e.preventDefault();\r\n          //       }}\r\n          //       className=\"tooltipped\"\r\n          //       data-position=\"bottom\"\r\n          //       data-tooltip={events[0].title}\r\n          //     >\r\n          //       {`+ ${target} more`}\r\n          //     </div>\r\n          //   ),\r\n          // }}\r\n          popup\r\n          // Disbale redirec when cliking date pn calendar\r\n          components={{\r\n            month: {\r\n              dateHeader: ({ date, label }) => {\r\n                return <div>{label}</div>;\r\n              },\r\n            },\r\n          }}\r\n          //         onSelectSlot={this.newEvent}\r\n          //         onDragStart={console.log}\r\n          //         popup={true}\r\n          //         dragFromOutsideItem={\r\n          //           this.state.displayDragItemInCell ? this.dragFromOutsideItem : null\r\n          //         }\r\n          //         onDropFromOutside={this.onDropFromOutside}\r\n          //         handleDragStart={this.handleDragStart}\r\n        />\r\n        <a\r\n          ref={editEventModalRef}\r\n          id=\"editEventModalTrigger\"\r\n          href=\"#edit-event-modal\"\r\n          className=\"modal-trigger\"\r\n        ></a>\r\n        <a\r\n          ref={addEventModalRef}\r\n          id=\"addEventModalTrigger\"\r\n          href=\"#add-event-modal\"\r\n          className=\"modal-trigger\"\r\n        ></a>\r\n      </div>\r\n      <AddEventModal />\r\n      <EditEventModal />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    event: state.event,\r\n    navbar: state.navbar,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  resizeEvent,\r\n  setCurrentEvent,\r\n  setEditing,\r\n})(CalendarView);\r\n","import { SET_CURRENT_EVENT_TYPE_LIST_ITEM, SET_ERASING } from \"./types\";\r\n\r\nexport const setCurrentEventTypesListItem = (property) => {\r\n  return {\r\n    type: SET_CURRENT_EVENT_TYPE_LIST_ITEM,\r\n    payload: property, // { _id, title, color }\r\n  };\r\n};\r\n\r\nexport const setErasing = () => {\r\n  return {\r\n    type: SET_ERASING,\r\n    payload: null,\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport remarkGfm from \"remark-gfm\";\r\nimport rehypeRaw from \"rehype-raw\";\r\n\r\nimport \"./style.css\";\r\nimport AppMarkdown from \"./README.md\";\r\n\r\nconst MarkDown = () => {\r\n  const [markdown, setMarkdown] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(AppMarkdown)\r\n      .then((res) => res.text())\r\n      .then((text) => setMarkdown(text));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"markdown\">\r\n      <div className=\"result\">\r\n        <ReactMarkdown\r\n          className=\"markdown-body\"\r\n          remarkPlugins={remarkGfm}\r\n          rehypePlugins={rehypeRaw}\r\n        >\r\n          {markdown}\r\n        </ReactMarkdown>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarkDown;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { isBetween } from \"moment\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setTimeRange, setHover } from \"../../../../actions/timeActions\";\r\n\r\nimport \"./style.css\";\r\n\r\n// index ranges from 0 to 95 representing different times in a day\r\n\r\nconst TimeSlot = ({\r\n  // time: { final },\r\n  setTimeRange,\r\n  setHover,\r\n  index,\r\n  date,\r\n  isSelected,\r\n  property,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={`timeslot-container`}\r\n      style={{\r\n        filter: isSelected ? \"brightness(0.7)\" : \"brightness(1)\",\r\n        backgroundColor: property != null ? property.color : \"#ececec\",\r\n      }}\r\n      onMouseUp={() => {\r\n        setTimeRange({ date, index });\r\n      }}\r\n      // onMouseEnter={() => {\r\n      //   setHover({ date, index });\r\n      // }}\r\n    >\r\n      {property && property.title}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, {\r\n  setTimeRange,\r\n  setHover,\r\n})(TimeSlot);\r\n","import { SET_TIME_RANGE, SET_HOVER, SET_DAYS, SET_PREVTIME } from \"./types\";\r\n\r\nimport moment from \"moment\";\r\n\r\nexport const setTimeRange = ({ date, index }) => {\r\n  return {\r\n    type: SET_TIME_RANGE,\r\n    payload: { date: moment(date, \"YYYY:MM:DD\"), index },\r\n  };\r\n};\r\nexport const setDays = (days) => {\r\n  return {\r\n    type: SET_DAYS,\r\n    payload: days,\r\n  };\r\n};\r\nexport const setPrevTime = (time) => {\r\n  return {\r\n    type: SET_PREVTIME,\r\n    payload: time,\r\n  };\r\n};\r\n\r\nexport const setHover = ({ date, index }) => {\r\n  return {\r\n    type: SET_HOVER,\r\n    payload: { date: moment(date, \"YYYY:MM:DD\"), index },\r\n  };\r\n};\r\n","import React, { useRef, Component, Fragment } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nimport TimeSlot from \"./TimeSlot\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { render } from \"react-dom\";\r\n\r\nconst TimeSlotMatrics = ({ date: { year, month, day }, style, timeslots }) => {\r\n  const monthsList = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"Aug\",\r\n    \"Sept\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  let m = monthsList[month - 1];\r\n  let d = day;\r\n  let y = year;\r\n\r\n  var times = [],\r\n    TimeslotItems = [];\r\n\r\n  // Display the time in a day\r\n  for (let i = 0; i < 24; i++) {\r\n    times.push(<div key={i}>{i + \":00\"}</div>);\r\n  }\r\n\r\n  for (let j = 0; j < 96; j++) {\r\n    if (timeslots[j].property != null) {\r\n      TimeslotItems.push(\r\n        <TimeSlot\r\n          key={j}\r\n          date={year + \":\" + month + \":\" + day}\r\n          index={j}\r\n          isSelected={timeslots[j].isSelected}\r\n          property={timeslots[j].property}\r\n        />\r\n      );\r\n    } else {\r\n      TimeslotItems.push(\r\n        <TimeSlot\r\n          key={j}\r\n          date={year + \":\" + month + \":\" + day}\r\n          index={j}\r\n          isSelected={timeslots[j].isSelected}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={style} id={year + \":\" + month + \":\" + day}>\r\n      <div className=\"day-wrapper\">\r\n        <div className=\"date-label\">\r\n          <span>{m}</span>\r\n          <span>{d}</span>\r\n          <span>{y}</span>\r\n        </div>\r\n        <div className=\"time-label\">{times.map((time) => time)}</div>\r\n        <div className=\"timeslotItems-wrapper\">\r\n          {TimeslotItems.map((timeslot) => timeslot)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeSlotMatrics;\r\n","import React, { useRef, useState, useCallback, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport TimeSlotMatrics from \"./TimeSlotMatrics\";\r\n\r\nimport { setViewingDate } from \"../../../actions/navbarActions\";\r\n\r\nimport { FixedSizeList } from \"react-window\";\r\nimport moment from \"moment\";\r\nimport M from \"materialize-css\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst DayList = ({\r\n  navbar: { date, viewingDate },\r\n  setViewingDate,\r\n  days,\r\n  TimeSlot,\r\n  min,\r\n  max,\r\n}) => {\r\n  var listRef = useRef();\r\n  var parentRef = useRef();\r\n\r\n  const [height, setHeight] = useState(0);\r\n  // const [width, setWidth] = useState(0);\r\n  const [loaded, setLoaded] = useState(0);\r\n\r\n  const updateSize = () => {\r\n    if (parentRef.current) {\r\n      setHeight(parentRef.current.offsetHeight);\r\n      // setWidth(parentRef.current.offsetWidth);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    M.AutoInit();\r\n    setLoaded(true);\r\n    updateSize();\r\n    window.addEventListener(\"resize\", () => updateSize());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    scrollToDate(moment(date));\r\n  }, [loaded]);\r\n\r\n  useEffect(() => {\r\n    scrollToDate(moment(date));\r\n    // renderTodayPointer();\r\n  }, [date]);\r\n\r\n  const getDateFromOffset = (offset) => {\r\n    return moment(min).add(offset, \"day\");\r\n  };\r\n\r\n  const getDateOffset = (date) => {\r\n    return date.diff(min, \"days\");\r\n  };\r\n\r\n  const scrollToDate = async (date = 0, ...rest) => {\r\n    let offsetTop = getDateOffset(date);\r\n\r\n    await listRef.current.scrollToItem(offsetTop, \"center\");\r\n    // renderTodayPointer();\r\n  };\r\n\r\n  const renderDay = ({ index, style }) => {\r\n    let { day, month, year, timeslots } = days[index];\r\n    let key = `${year}:${month}:${day}`;\r\n\r\n    // renderTodayPointer();\r\n    // setInterval(() => {\r\n    //   renderTodayPointer();\r\n    // }, 60000);\r\n\r\n    return (\r\n      <TimeSlotMatrics\r\n        key={key}\r\n        style={style}\r\n        date={{ year, month, day }}\r\n        timeslots={timeslots}\r\n        TimeSlot={TimeSlot}\r\n      />\r\n    );\r\n  };\r\n\r\n  // BUGGED\r\n  // Find the current timeslot and append class \"current\" to it\r\n  // const renderTodayPointer = () => {\r\n  //   // Remove previous pointer if there is any\r\n  //   if (document.getElementsByClassName(\"current\")[0]) {\r\n  //     document.getElementsByClassName(\"current\")[0].remove();\r\n  //   }\r\n\r\n  //   // Add a pointer\r\n  //   const matricsElm = document.getElementById(moment().format(\"YYYY:M:D\"));\r\n\r\n  //   if (matricsElm !== null) {\r\n  //     var overlay = document.createElement(\"div\");\r\n  //     overlay.className = \"current\";\r\n\r\n  //     const time = moment().diff(moment().startOf(\"day\"), \"minutes\");\r\n  //     const current = matricsElm\r\n  //       .getElementsByClassName(\"timeslots-wrapper\")[0]\r\n  //       .children.item(Math.ceil(time / 15));\r\n  //     current.appendChild(overlay);\r\n  //     current.getElementsByClassName(\r\n  //       \"current\"\r\n  //     )[0].style.transform = `translatex(${((time % 15) / 15) * 640}%)`;\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div style={{ height: \"93.5vh\" }} ref={parentRef}>\r\n      <FixedSizeList\r\n        className=\"infiniteList\"\r\n        ref={listRef}\r\n        height={height}\r\n        width={\"100%\"}\r\n        itemCount={days.length}\r\n        itemSize={height}\r\n        children={renderDay}\r\n        onScroll={(scrollTop) => {\r\n          let temp = getDateFromOffset(\r\n            Math.round(scrollTop.scrollOffset / height)\r\n          );\r\n\r\n          if (temp.diff(viewingDate, \"day\") != 0) {\r\n            setViewingDate(temp.startOf(\"day\"));\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    navbar: state.navbar,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setViewingDate })(DayList);\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./style.css\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst EventTypesListItem = ({\r\n  _id,\r\n  title,\r\n  color,\r\n  onEventTypesListItemClick,\r\n}) => {\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const itemStyle = {\r\n    display: \"block\",\r\n    width: \"8rem\",\r\n    margin: \"0.5rem\",\r\n    border: \"2px solid \" + color,\r\n    padding: \"0 0.5rem 0\",\r\n    letterSpacing: \"0.5px\",\r\n    color: color,\r\n    backgroundColor: \"white\",\r\n    transition: \"all 0.25s ease-in-out\",\r\n  };\r\n\r\n  const itemHoverStyle = {\r\n    display: \"block\",\r\n    width: \"8rem\",\r\n    margin: \"0.5rem\",\r\n    border: \"2px solid \" + color,\r\n    padding: \"0 0.5rem 0\",\r\n    letterSpacing: \"0.5px\",\r\n    transition: \"all 0.25s ease-in-out\",\r\n    backgroundColor: color,\r\n    color: \"white\",\r\n  };\r\n\r\n  var style;\r\n  if (hover) {\r\n    style = itemHoverStyle;\r\n  } else {\r\n    style = itemStyle;\r\n  }\r\n\r\n  return (\r\n    <div className=\"event-types-list-item-wrapper\">\r\n      <a\r\n        //eslint-dsiable-next-line\r\n        style={style}\r\n        onMouseEnter={() => setHover(true)}\r\n        onMouseLeave={() => setHover(false)}\r\n        onClick={() => {\r\n          onEventTypesListItemClick(_id, title, color);\r\n        }}\r\n      >\r\n        {title}\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nEventTypesListItem.propTypes = {};\r\n\r\nexport default EventTypesListItem;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  setCurrentEventTypesListItem,\r\n  setErasing,\r\n} from \"../../../actions/eventTypesListItemActions.js\";\r\nimport EventTypesListItem from \"./EventTypesListItem\";\r\nimport \"./style.css\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst EventTypesList = ({\r\n  event: { events },\r\n  eventTypes: { eventTypes },\r\n  navbar: { viewingDate },\r\n  time: { start, end, final },\r\n  setCurrentEventTypesListItem,\r\n  setErasing,\r\n  height,\r\n}) => {\r\n  const onEventTypesListItemClick = (_id, title, color) => {\r\n    if (final == true && start != null && end != null) {\r\n      setCurrentEventTypesListItem({ _id, title, color });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"event-types-list-wrapper\">\r\n      <div>\r\n        <h5>Temporary</h5>\r\n        {events.map((item) => {\r\n          if (viewingDate.isBetween(item.start, item.end, \"day\", \"[)\")) {\r\n            return (\r\n              <EventTypesListItem\r\n                key={item._id + \"t\"}\r\n                _id={item._id + \"t\"}\r\n                title={item.title}\r\n                color={item.color}\r\n                onEventTypesListItemClick={onEventTypesListItemClick}\r\n              />\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n      <div>\r\n        <h5>Recurring</h5>\r\n        {eventTypes.map((item) => (\r\n          <EventTypesListItem\r\n            key={item._id + \"r\"}\r\n            _id={item._id + \"r\"}\r\n            title={item.title}\r\n            color={item.color}\r\n            onEventTypesListItemClick={onEventTypesListItemClick}\r\n          />\r\n        ))}\r\n        <h5>Tools</h5>\r\n        <EventTypesListItem\r\n          _id={\"eraser\"}\r\n          title={\"Eraser\"}\r\n          color={\"#000000\"}\r\n          onEventTypesListItemClick={setErasing}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    eventTypes: state.eventTypes,\r\n    event: state.event,\r\n    navbar: state.navbar,\r\n    time: state.time,\r\n  };\r\n};\r\n\r\nEventTypesList.propTypes = {};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setCurrentEventTypesListItem,\r\n  setErasing,\r\n})(EventTypesList);\r\n","import React, { Component, useState, useEffect, useRef } from \"react\";\r\nimport moment, { min } from \"moment\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setCurrentEventTypesListItem,\r\n  setErasing,\r\n} from \"../../actions/eventTypesListItemActions\";\r\nimport { setDays, setPrevTime } from \"../../actions/timeActions\";\r\n\r\nimport MarkDown from \"./MarkDown\";\r\nimport TimeSlot from \"./DayList/TimeSlot\";\r\nimport DayList from \"./DayList\";\r\nimport EventTypesList from \"./EventTypesList\";\r\n\r\nimport \"./style.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst deepCopy = (arr) => {\r\n  let copy = [];\r\n  arr.forEach((elem) => {\r\n    if (Array.isArray(elem)) {\r\n      copy.push(deepCopy(elem));\r\n    } else {\r\n      copy.push(elem);\r\n    }\r\n  });\r\n  return copy;\r\n};\r\n\r\nclass DayBlocks extends Component {\r\n  constructor(props) {\r\n    super(...arguments);\r\n\r\n    var min = moment().startOf(\"year\").subtract(1, \"year\");\r\n    var max = moment().startOf(\"year\").add(1, \"year\");\r\n\r\n    this.state = {\r\n      TimeSlot,\r\n\r\n      min: min,\r\n      max: max,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // Typical usage (don't forget to compare props):\r\n    const { time, eventTypesListItem } = this.props;\r\n    if (\r\n      time.final != prevProps.time.final ||\r\n      time.end != prevProps.time.end ||\r\n      time.start != prevProps.time.start\r\n    ) {\r\n      if (time.final && time.start != null && time.end != null) {\r\n        this.selectRange(time.start, time.end, true);\r\n        this.props.setPrevTime(time);\r\n      } else if (!time.final && time.prevTime != null) {\r\n        this.selectRange(time.prevTime.start, time.prevTime.end, false);\r\n        this.props.setPrevTime(null);\r\n      }\r\n    } else if (eventTypesListItem != prevProps.eventTypesListItem) {\r\n      if (\r\n        eventTypesListItem.currentEventTypesListItem !=\r\n          prevProps.eventTypesListItem.currentEventTypesListItem &&\r\n        time.final &&\r\n        time.start != null &&\r\n        time.end != null\r\n      ) {\r\n        this.paintRange(\r\n          time.start,\r\n          time.end,\r\n          eventTypesListItem.currentEventTypesListItem\r\n        );\r\n        this.selectRange(time.prevTime.start, time.prevTime.end, false);\r\n        this.props.setPrevTime(null);\r\n      } else if (\r\n        eventTypesListItem.erasing != prevProps.eventTypesListItem.erasing &&\r\n        time.final &&\r\n        time.start != null &&\r\n        time.end != null\r\n      ) {\r\n        this.eraseRange(time.start, time.end);\r\n        setErasing();\r\n      }\r\n    }\r\n  }\r\n\r\n  paintRange(date1, date2, property) {\r\n    let startDate, endDate;\r\n    if (date1.date.diff(date2.date, \"days\") > 0) {\r\n      startDate = date2;\r\n      endDate = date1;\r\n    } else if (date1.date.diff(date2.date, \"days\") < 0) {\r\n      startDate = date1;\r\n      endDate = date2;\r\n    } else {\r\n      if (date1.index > date2.index) {\r\n        startDate = date2;\r\n        endDate = date1;\r\n      } else {\r\n        startDate = date1;\r\n        endDate = date2;\r\n      }\r\n    }\r\n\r\n    let newDays = deepCopy(this.props.time.days);\r\n\r\n    let startIndex = startDate.date.diff(this.state.min, \"days\");\r\n    let endIndex = endDate.date.diff(this.state.min, \"days\");\r\n    for (let i = startIndex; i <= endIndex; i++) {\r\n      if (startIndex == endIndex) {\r\n        for (let j = startDate.index; j <= endDate.index; j++) {\r\n          newDays[i].timeslots[j].property = property;\r\n        }\r\n      } else {\r\n        if (i == startIndex) {\r\n          for (let j = startDate.index; j < 96; j++) {\r\n            newDays[i].timeslots[j].property = property;\r\n          }\r\n        } else if (i == endIndex) {\r\n          for (let j = 0; j <= endDate.index; j++) {\r\n            newDays[i].timeslots[j].property = property;\r\n          }\r\n        } else {\r\n          for (let j = 0; j < 96; j++) {\r\n            newDays[i].timeslots[j].property = property;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.props.setDays(newDays);\r\n  }\r\n\r\n  selectRange(date1, date2, isTrue) {\r\n    let startDate, endDate;\r\n    if (date1.date.diff(date2.date, \"days\") > 0) {\r\n      startDate = date2;\r\n      endDate = date1;\r\n    } else if (date1.date.diff(date2.date, \"days\") < 0) {\r\n      startDate = date1;\r\n      endDate = date2;\r\n    } else {\r\n      if (date1.index > date2.index) {\r\n        startDate = date2;\r\n        endDate = date1;\r\n      } else {\r\n        startDate = date1;\r\n        endDate = date2;\r\n      }\r\n    }\r\n\r\n    let newDays = deepCopy(this.props.time.days);\r\n\r\n    let startIndex = startDate.date.diff(this.state.min, \"days\");\r\n    let endIndex = endDate.date.diff(this.state.min, \"days\");\r\n    for (let i = startIndex; i <= endIndex; i++) {\r\n      if (startIndex == endIndex) {\r\n        for (let j = startDate.index; j <= endDate.index; j++) {\r\n          newDays[i].timeslots[j].isSelected = isTrue;\r\n        }\r\n      } else {\r\n        if (i == startIndex) {\r\n          for (let j = startDate.index; j < 96; j++) {\r\n            newDays[i].timeslots[j].isSelected = isTrue;\r\n          }\r\n        } else if (i == endIndex) {\r\n          for (let j = 0; j <= endDate.index; j++) {\r\n            newDays[i].timeslots[j].isSelected = isTrue;\r\n          }\r\n        } else {\r\n          for (let j = 0; j < 96; j++) {\r\n            newDays[i].timeslots[j].isSelected = isTrue;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.props.setDays(newDays);\r\n  }\r\n\r\n  eraseRange(date1, date2) {\r\n    let startDate, endDate;\r\n    if (date1.date.diff(date2.date, \"days\") > 0) {\r\n      startDate = date2;\r\n      endDate = date1;\r\n    } else if (date1.date.diff(date2.date, \"days\") < 0) {\r\n      startDate = date1;\r\n      endDate = date2;\r\n    } else {\r\n      if (date1.index > date2.index) {\r\n        startDate = date2;\r\n        endDate = date1;\r\n      } else {\r\n        startDate = date1;\r\n        endDate = date2;\r\n      }\r\n    }\r\n\r\n    let newDays = deepCopy(this.props.time.days);\r\n\r\n    let startIndex = startDate.date.diff(this.state.min, \"days\");\r\n    let endIndex = endDate.date.diff(this.state.min, \"days\");\r\n    for (let i = startIndex; i <= endIndex; i++) {\r\n      if (startIndex == endIndex) {\r\n        for (let j = startDate.index; j <= endDate.index; j++) {\r\n          newDays[i].timeslots[j].isSelected = false;\r\n          newDays[i].timeslots[j].property = null;\r\n        }\r\n      } else {\r\n        if (i == startIndex) {\r\n          for (let j = startDate.index; j < 96; j++) {\r\n            newDays[i].timeslots[j].isSelected = false;\r\n            newDays[i].timeslots[j].property = null;\r\n          }\r\n        } else if (i == endIndex) {\r\n          for (let j = 0; j <= endDate.index; j++) {\r\n            newDays[i].timeslots[j].isSelected = false;\r\n            newDays[i].timeslots[j].property = null;\r\n          }\r\n        } else {\r\n          for (let j = 0; j < 96; j++) {\r\n            newDays[i].timeslots[j].isSelected = false;\r\n            newDays[i].timeslots[j].property = null;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.props.setDays(newDays);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"days-wrapper\">\r\n        <div className=\"timeGrids-container\">\r\n          <DayList\r\n            days={this.props.time.days}\r\n            TimeSlot={this.state.TimeSlot}\r\n            min={this.state.min}\r\n            max={this.state.max}\r\n          />\r\n        </div>\r\n        <EventTypesList height={\"100%\"} />\r\n        <MarkDown />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    time: state.time,\r\n    eventTypesListItem: state.eventTypesListItem,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setCurrentEventTypesListItem,\r\n  setDays,\r\n  setPrevTime,\r\n})(DayBlocks);\r\n","import React from \"react\";\r\n\r\nconst AddBtn = () => {\r\n  return (\r\n    <div className=\"fixed-action-btn\">\r\n      <a\r\n        href=\"#add-event-type-modal\"\r\n        className=\"btn-floating btn-large blue darken-2 modal-trigger\"\r\n      >\r\n        <i className=\"large material-icons\">add</i>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBtn;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n// import TechSelectOptions from \"../techs/TechSelectOptions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addEventType } from \"../../actions/eventTypesActions\";\r\n\r\nimport { BlockPicker } from \"react-color\";\r\n\r\nimport M from \"materialize-css\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst AddEventTypeModal = ({ eventTypes: { eventTypes }, addEventType }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [color, setColor] = useState(\"#e6ff80\");\r\n\r\n  const onSubmit = () => {\r\n    if (title === \"\") {\r\n      M.toast({ html: \"Please enter a title\" });\r\n    } else {\r\n      // Check if startDate is before endDate\r\n\r\n      let isUnique = true;\r\n\r\n      eventTypes.map((eventType) => {\r\n        if (eventType.title == title) {\r\n          isUnique = false;\r\n        }\r\n      });\r\n\r\n      if (isUnique) {\r\n        const newEventType = {\r\n          title: title,\r\n          color: color,\r\n        };\r\n\r\n        addEventType(newEventType);\r\n\r\n        M.toast({ html: `Event Type Added` });\r\n      } else {\r\n        M.toast({ html: `Duplicating Event Type` });\r\n      }\r\n\r\n      // Clear Fields\r\n      setTitle(\"\");\r\n      setColor(\"#e6ff80\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"add-event-type-modal\" className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <h4>Enter A New Event Type</h4>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <label htmlFor=\"title\" className=\"active\">\r\n              Title\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <BlockPicker\r\n            width=\"100%\"\r\n            onChangeComplete={(color) => setColor(color.hex)}\r\n            color={color}\r\n            colors={[\r\n              \"#FF6633\",\r\n              \"#FFB399\",\r\n              \"#FF33FF\",\r\n              \"#FFFF99\",\r\n              \"#00B3E6\",\r\n              \"#E6B333\",\r\n              \"#3366E6\",\r\n              \"#999966\",\r\n              \"#99FF99\",\r\n              \"#B34D4D\",\r\n              \"#80B300\",\r\n              \"#809900\",\r\n              \"#E6B3B3\",\r\n              \"#6680B3\",\r\n              \"#66991A\",\r\n              \"#FF99E6\",\r\n              \"#CCFF1A\",\r\n              \"#FF1A66\",\r\n              \"#E6331A\",\r\n              \"#33FFCC\",\r\n              \"#66994D\",\r\n              \"#B366CC\",\r\n              \"#4D8000\",\r\n              \"#B33300\",\r\n              \"#CC80CC\",\r\n              \"#66664D\",\r\n              \"#991AFF\",\r\n              \"#E666FF\",\r\n              \"#4DB3FF\",\r\n              \"#1AB399\",\r\n              \"#E666B3\",\r\n              \"#33991A\",\r\n              \"#CC9999\",\r\n              \"#B3B31A\",\r\n              \"#00E680\",\r\n              \"#4D8066\",\r\n              \"#809980\",\r\n              \"#E6FF80\",\r\n              \"#1AFF33\",\r\n              \"#999933\",\r\n              \"#FF3380\",\r\n              \"#CCCC00\",\r\n              \"#66E64D\",\r\n              \"#4D80CC\",\r\n              \"#9900B3\",\r\n              \"#E64D66\",\r\n              \"#4DB380\",\r\n              \"#FF4D4D\",\r\n              \"#99E6E6\",\r\n              \"#6666FF\",\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onSubmit}\r\n          className=\"modal-close waves-effect waves btn\"\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    eventTypes: state.eventTypes,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addEventType })(AddEventTypeModal);\r\n","import {\r\n  ADD_EVENT_TYPE,\r\n  ADD_EVENT_TYPE_ERROR,\r\n  UPDATE_EVENT_TYPE,\r\n  UPDATE_EVENT_TYPE_ERROR,\r\n  DELETE_EVENT_TYPE,\r\n  DELETE_EVENT_TYPE_ERROR,\r\n  SET_CURRENT_EVENT_TYPE,\r\n} from \"./types\";\r\n\r\nimport { v4 as uuid } from \"uuid\"; //Dev use only\r\n\r\n// Add new event\r\nexport const addEventType =\r\n  ({ title, color }) =>\r\n  async (dispatch) => {\r\n    try {\r\n      // Implement REST API Here\r\n\r\n      // const res = await fetch(\"./logs\");\r\n      // const data = await res.json();\r\n\r\n      // uuid as placeholder\r\n      const id = uuid();\r\n\r\n      const content = { title, color, _id: id };\r\n      dispatch({\r\n        type: ADD_EVENT_TYPE,\r\n        payload: content,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: ADD_EVENT_TYPE_ERROR,\r\n        payload: err.response,\r\n      });\r\n    }\r\n  };\r\n\r\n// Update existing event\r\nexport const updateEventType =\r\n  ({ title, color, _id: id }) =>\r\n  async (dispatch) => {\r\n    try {\r\n      // Implement REST API Here\r\n\r\n      // const res = await fetch(\"./logs\");\r\n      // const data = await res.json();\r\n\r\n      // uuid as placeholder\r\n      const content = { title, color, _id: id };\r\n      dispatch({\r\n        type: UPDATE_EVENT_TYPE,\r\n        payload: content,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: UPDATE_EVENT_TYPE_ERROR,\r\n        payload: err.response,\r\n      });\r\n    }\r\n  };\r\n\r\n// Delete existing event\r\nexport const deleteEventType = (_id) => async (dispatch) => {\r\n  try {\r\n    // Implement REST API Here\r\n\r\n    // const res = await fetch(\"./logs\");\r\n    // const data = await res.json();\r\n\r\n    dispatch({\r\n      type: DELETE_EVENT_TYPE,\r\n      payload: _id,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: DELETE_EVENT_TYPE_ERROR,\r\n      payload: err.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const setCurrentEventType = (currentEvent) => {\r\n  return {\r\n    type: SET_CURRENT_EVENT_TYPE,\r\n    payload: currentEvent,\r\n  };\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  updateEventType,\r\n  deleteEventType,\r\n} from \"../../actions/eventTypesActions\";\r\n\r\nimport { BlockPicker } from \"react-color\";\r\nimport M from \"materialize-css\";\r\n\r\nconst EditEventTypeModal = ({\r\n  eventTypes: { eventTypes, eventType: currenEventType },\r\n  updateEventType,\r\n  deleteEventType,\r\n}) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [color, setColor] = useState(\"#e6ff80\");\r\n\r\n  // ComponentDidMount\r\n  useEffect(() => {\r\n    if (currenEventType !== {}) {\r\n      document.getElementsByName(\"title\")[1].focus();\r\n      setTitle(currenEventType.title);\r\n      setColor(currenEventType.color);\r\n    }\r\n  }, [currenEventType]);\r\n\r\n  const onDelete = () => {\r\n    deleteEventType(currenEventType._id);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (title === \"\") {\r\n      M.toast({ html: \"Please enter a title\" });\r\n    } else {\r\n      // Check if startDate is before endDate\r\n\r\n      let isUnique = true;\r\n\r\n      eventTypes.map((eventType) => {\r\n        if (\r\n          eventType.title == title &&\r\n          // Ensures not duplicating with other event types except the original one\r\n          eventType.title !== currenEventType.title\r\n        ) {\r\n          isUnique = false;\r\n        }\r\n      });\r\n\r\n      if (isUnique) {\r\n        const newEventType = {\r\n          _id: currenEventType._id,\r\n          title: title,\r\n          color: color,\r\n        };\r\n\r\n        updateEventType(newEventType);\r\n\r\n        M.toast({ html: `Event Type Updated` });\r\n      } else {\r\n        M.toast({ html: `Duplicating Event Type` });\r\n      }\r\n\r\n      // Clear Fields\r\n      setTitle(\"\");\r\n      setColor(\"#e6ff80\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"edit-event-type-modal\" className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <h4>Edit the Event Type</h4>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <label htmlFor=\"title\" className=\"active\">\r\n              Title\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <BlockPicker\r\n            width=\"100%\"\r\n            onChangeComplete={(color) => setColor(color.hex)}\r\n            color={color}\r\n            colors={[\r\n              \"#FF6633\",\r\n              \"#FFB399\",\r\n              \"#FF33FF\",\r\n              \"#FFFF99\",\r\n              \"#00B3E6\",\r\n              \"#E6B333\",\r\n              \"#3366E6\",\r\n              \"#999966\",\r\n              \"#99FF99\",\r\n              \"#B34D4D\",\r\n              \"#80B300\",\r\n              \"#809900\",\r\n              \"#E6B3B3\",\r\n              \"#6680B3\",\r\n              \"#66991A\",\r\n              \"#FF99E6\",\r\n              \"#CCFF1A\",\r\n              \"#FF1A66\",\r\n              \"#E6331A\",\r\n              \"#33FFCC\",\r\n              \"#66994D\",\r\n              \"#B366CC\",\r\n              \"#4D8000\",\r\n              \"#B33300\",\r\n              \"#CC80CC\",\r\n              \"#66664D\",\r\n              \"#991AFF\",\r\n              \"#E666FF\",\r\n              \"#4DB3FF\",\r\n              \"#1AB399\",\r\n              \"#E666B3\",\r\n              \"#33991A\",\r\n              \"#CC9999\",\r\n              \"#B3B31A\",\r\n              \"#00E680\",\r\n              \"#4D8066\",\r\n              \"#809980\",\r\n              \"#E6FF80\",\r\n              \"#1AFF33\",\r\n              \"#999933\",\r\n              \"#FF3380\",\r\n              \"#CCCC00\",\r\n              \"#66E64D\",\r\n              \"#4D80CC\",\r\n              \"#9900B3\",\r\n              \"#E64D66\",\r\n              \"#4DB380\",\r\n              \"#FF4D4D\",\r\n              \"#99E6E6\",\r\n              \"#6666FF\",\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onDelete}\r\n          className=\"modal-close waves-effect waves-green btn-flat\"\r\n        >\r\n          Delete\r\n        </a>\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onSubmit}\r\n          className=\"modal-close waves-effect waves btn\"\r\n        >\r\n          Update\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: \"75%\",\r\n  height: \"75%\",\r\n  maxHeight: \"100%\",\r\n  overflow: \"visible\",\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    eventTypes: state.eventTypes,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { updateEventType, deleteEventType })(\r\n  EditEventTypeModal\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setCurrentEventType } from \"../../../actions/eventTypesActions\";\r\n\r\nimport M from \"materialize-css\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst EventTypeItem = ({ title, color, _id, setCurrentEventType }) => {\r\n  useEffect(() => {\r\n    M.AutoInit();\r\n  }, []);\r\n\r\n  return (\r\n    <li class=\"collection-item\">\r\n      <div>\r\n        <span className=\"dot\" style={{ backgroundColor: color }} />\r\n        <span className=\"content\">{title}</span>\r\n        <a\r\n          href=\"#edit-event-type-modal\"\r\n          className=\"modal-trigger secondary-content\"\r\n          onClick={() => setCurrentEventType({ title, color, _id })}\r\n        >\r\n          <i class=\"material-icons\">edit</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nEventTypeItem.propTypes = {};\r\n\r\nexport default connect(null, { setCurrentEventType })(EventTypeItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport AddBtn from \"./AddBtn\";\r\nimport AddEventTypeModal from \"./AddEventTypeModal\";\r\nimport EditEventTypeModal from \"./EditEventTypeModal\";\r\nimport EventTypeItem from \"./EventTypeItem\";\r\n\r\nimport \"./style.css\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst EventTypes = ({ eventTypes: { eventTypes } }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <ul class=\"collection with-header\">\r\n        <li class=\"collection-header\">\r\n          <h4>Recurring Event Types</h4>\r\n        </li>\r\n        {eventTypes.map((eventType) => (\r\n          <EventTypeItem\r\n            color={eventType.color}\r\n            title={eventType.title}\r\n            _id={eventType._id}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <AddEventTypeModal />\r\n      <EditEventTypeModal />\r\n      <AddBtn />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    eventTypes: state.eventTypes,\r\n  };\r\n};\r\n\r\nEventTypes.propTypes = {};\r\n\r\nexport default connect(mapStateToProps, {})(EventTypes);\r\n","import React, { useEffect, Fragment } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport store from \"./store\";\r\n\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport CalendarView from \"./components/Calendar\";\r\nimport TimeGrids from \"./components/TimeGrids\";\r\nimport EventTypes from \"./components/EventTypes\";\r\n\r\nimport \"materialize-css/dist/css/materialize.min.css\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nimport \"./css/App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Route\r\n            path=\"/blocky-calendar\"\r\n            render={() => (\r\n              <Fragment>\r\n                <Navbar />\r\n              </Fragment>\r\n            )}\r\n          />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/blocky-calendar/calendar\"\r\n              render={() => (\r\n                <Fragment>\r\n                  <CalendarView />\r\n                </Fragment>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path={[\"/blocky-calendar/\", \"/blocky-calendar/day\"]}\r\n              render={() => (\r\n                <Fragment>\r\n                  <TimeGrids />\r\n                </Fragment>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/blocky-calendar/event-types\"\r\n              render={() => (\r\n                <Fragment>\r\n                  <EventTypes />\r\n                </Fragment>\r\n              )}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}